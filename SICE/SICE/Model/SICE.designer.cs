#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SICE.Model
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="SICE")]
	public partial class SICEDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBITACORA(BITACORA instance);
    partial void UpdateBITACORA(BITACORA instance);
    partial void DeleteBITACORA(BITACORA instance);
    partial void InsertCATEGORIA(CATEGORIA instance);
    partial void UpdateCATEGORIA(CATEGORIA instance);
    partial void DeleteCATEGORIA(CATEGORIA instance);
    partial void InsertDATO_FISCAL(DATO_FISCAL instance);
    partial void UpdateDATO_FISCAL(DATO_FISCAL instance);
    partial void DeleteDATO_FISCAL(DATO_FISCAL instance);
    partial void InsertEMPLEADO(EMPLEADO instance);
    partial void UpdateEMPLEADO(EMPLEADO instance);
    partial void DeleteEMPLEADO(EMPLEADO instance);
    partial void InsertEMPRESA(EMPRESA instance);
    partial void UpdateEMPRESA(EMPRESA instance);
    partial void DeleteEMPRESA(EMPRESA instance);
    partial void InsertEMPRESA_EMPLEADO(EMPRESA_EMPLEADO instance);
    partial void UpdateEMPRESA_EMPLEADO(EMPRESA_EMPLEADO instance);
    partial void DeleteEMPRESA_EMPLEADO(EMPRESA_EMPLEADO instance);
    partial void InsertESTADO(ESTADO instance);
    partial void UpdateESTADO(ESTADO instance);
    partial void DeleteESTADO(ESTADO instance);
    partial void InsertFACTURA(FACTURA instance);
    partial void UpdateFACTURA(FACTURA instance);
    partial void DeleteFACTURA(FACTURA instance);
    partial void InsertFACTURA_PRODUCTO(FACTURA_PRODUCTO instance);
    partial void UpdateFACTURA_PRODUCTO(FACTURA_PRODUCTO instance);
    partial void DeleteFACTURA_PRODUCTO(FACTURA_PRODUCTO instance);
    partial void InsertFORMA_PAGO(FORMA_PAGO instance);
    partial void UpdateFORMA_PAGO(FORMA_PAGO instance);
    partial void DeleteFORMA_PAGO(FORMA_PAGO instance);
    partial void InsertIMPUESTO(IMPUESTO instance);
    partial void UpdateIMPUESTO(IMPUESTO instance);
    partial void DeleteIMPUESTO(IMPUESTO instance);
    partial void InsertIMPUESTOS_PRODUCTO(IMPUESTOS_PRODUCTO instance);
    partial void UpdateIMPUESTOS_PRODUCTO(IMPUESTOS_PRODUCTO instance);
    partial void DeleteIMPUESTOS_PRODUCTO(IMPUESTOS_PRODUCTO instance);
    partial void InsertMATRIZ_SUCURSAL(MATRIZ_SUCURSAL instance);
    partial void UpdateMATRIZ_SUCURSAL(MATRIZ_SUCURSAL instance);
    partial void DeleteMATRIZ_SUCURSAL(MATRIZ_SUCURSAL instance);
    partial void InsertMONEDA(MONEDA instance);
    partial void UpdateMONEDA(MONEDA instance);
    partial void DeleteMONEDA(MONEDA instance);
    partial void InsertPRODUCTO(PRODUCTO instance);
    partial void UpdatePRODUCTO(PRODUCTO instance);
    partial void DeletePRODUCTO(PRODUCTO instance);
    partial void InsertPRODUCTO_USUARIO(PRODUCTO_USUARIO instance);
    partial void UpdatePRODUCTO_USUARIO(PRODUCTO_USUARIO instance);
    partial void DeletePRODUCTO_USUARIO(PRODUCTO_USUARIO instance);
    partial void InsertPROVEEDOR(PROVEEDOR instance);
    partial void UpdatePROVEEDOR(PROVEEDOR instance);
    partial void DeletePROVEEDOR(PROVEEDOR instance);
    partial void InsertTIPO_PAGO(TIPO_PAGO instance);
    partial void UpdateTIPO_PAGO(TIPO_PAGO instance);
    partial void DeleteTIPO_PAGO(TIPO_PAGO instance);
    partial void InsertTIPO_USUARIO(TIPO_USUARIO instance);
    partial void UpdateTIPO_USUARIO(TIPO_USUARIO instance);
    partial void DeleteTIPO_USUARIO(TIPO_USUARIO instance);
    partial void InsertUNIDADES_MEDIDA(UNIDADES_MEDIDA instance);
    partial void UpdateUNIDADES_MEDIDA(UNIDADES_MEDIDA instance);
    partial void DeleteUNIDADES_MEDIDA(UNIDADES_MEDIDA instance);
    partial void InsertUSUARIO(USUARIO instance);
    partial void UpdateUSUARIO(USUARIO instance);
    partial void DeleteUSUARIO(USUARIO instance);
    #endregion
		
		public SICEDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["SICEConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public SICEDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SICEDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SICEDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SICEDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<BITACORA> BITACORAs
		{
			get
			{
				return this.GetTable<BITACORA>();
			}
		}
		
		public System.Data.Linq.Table<CATEGORIA> CATEGORIAs
		{
			get
			{
				return this.GetTable<CATEGORIA>();
			}
		}
		
		public System.Data.Linq.Table<DATO_FISCAL> DATO_FISCALs
		{
			get
			{
				return this.GetTable<DATO_FISCAL>();
			}
		}
		
		public System.Data.Linq.Table<EMPLEADO> EMPLEADOs
		{
			get
			{
				return this.GetTable<EMPLEADO>();
			}
		}
		
		public System.Data.Linq.Table<EMPRESA> EMPRESAs
		{
			get
			{
				return this.GetTable<EMPRESA>();
			}
		}
		
		public System.Data.Linq.Table<EMPRESA_EMPLEADO> EMPRESA_EMPLEADOs
		{
			get
			{
				return this.GetTable<EMPRESA_EMPLEADO>();
			}
		}
		
		public System.Data.Linq.Table<ESTADO> ESTADOs
		{
			get
			{
				return this.GetTable<ESTADO>();
			}
		}
		
		public System.Data.Linq.Table<FACTURA> FACTURAs
		{
			get
			{
				return this.GetTable<FACTURA>();
			}
		}
		
		public System.Data.Linq.Table<FACTURA_DETALLE> FACTURA_DETALLEs
		{
			get
			{
				return this.GetTable<FACTURA_DETALLE>();
			}
		}
		
		public System.Data.Linq.Table<FACTURA_PRODUCTO> FACTURA_PRODUCTOs
		{
			get
			{
				return this.GetTable<FACTURA_PRODUCTO>();
			}
		}
		
		public System.Data.Linq.Table<FORMA_PAGO> FORMA_PAGOs
		{
			get
			{
				return this.GetTable<FORMA_PAGO>();
			}
		}
		
		public System.Data.Linq.Table<IMPUESTO> IMPUESTOs
		{
			get
			{
				return this.GetTable<IMPUESTO>();
			}
		}
		
		public System.Data.Linq.Table<IMPUESTOS_PRODUCTO> IMPUESTOS_PRODUCTOs
		{
			get
			{
				return this.GetTable<IMPUESTOS_PRODUCTO>();
			}
		}
		
		public System.Data.Linq.Table<MATRIZ_SUCURSAL> MATRIZ_SUCURSALs
		{
			get
			{
				return this.GetTable<MATRIZ_SUCURSAL>();
			}
		}
		
		public System.Data.Linq.Table<MONEDA> MONEDAs
		{
			get
			{
				return this.GetTable<MONEDA>();
			}
		}
		
		public System.Data.Linq.Table<PRODUCTO> PRODUCTOs
		{
			get
			{
				return this.GetTable<PRODUCTO>();
			}
		}
		
		public System.Data.Linq.Table<PRODUCTO_USUARIO> PRODUCTO_USUARIOs
		{
			get
			{
				return this.GetTable<PRODUCTO_USUARIO>();
			}
		}
		
		public System.Data.Linq.Table<PROVEEDOR> PROVEEDORs
		{
			get
			{
				return this.GetTable<PROVEEDOR>();
			}
		}
		
		public System.Data.Linq.Table<TIPO_PAGO> TIPO_PAGOs
		{
			get
			{
				return this.GetTable<TIPO_PAGO>();
			}
		}
		
		public System.Data.Linq.Table<TIPO_USUARIO> TIPO_USUARIOs
		{
			get
			{
				return this.GetTable<TIPO_USUARIO>();
			}
		}
		
		public System.Data.Linq.Table<UNIDADES_MEDIDA> UNIDADES_MEDIDAs
		{
			get
			{
				return this.GetTable<UNIDADES_MEDIDA>();
			}
		}
		
		public System.Data.Linq.Table<USUARIO> USUARIOs
		{
			get
			{
				return this.GetTable<USUARIO>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BITACORA")]
	public partial class BITACORA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BITACORA_ID;
		
		private System.Nullable<int> _USUARIO_ID;
		
		private System.Nullable<System.DateTime> _HORA;
		
		private string _ACCION;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBITACORA_IDChanging(int value);
    partial void OnBITACORA_IDChanged();
    partial void OnUSUARIO_IDChanging(System.Nullable<int> value);
    partial void OnUSUARIO_IDChanged();
    partial void OnHORAChanging(System.Nullable<System.DateTime> value);
    partial void OnHORAChanged();
    partial void OnACCIONChanging(string value);
    partial void OnACCIONChanged();
    #endregion
		
		public BITACORA()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BITACORA_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BITACORA_ID
		{
			get
			{
				return this._BITACORA_ID;
			}
			set
			{
				if ((this._BITACORA_ID != value))
				{
					this.OnBITACORA_IDChanging(value);
					this.SendPropertyChanging();
					this._BITACORA_ID = value;
					this.SendPropertyChanged("BITACORA_ID");
					this.OnBITACORA_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USUARIO_ID", DbType="Int")]
		public System.Nullable<int> USUARIO_ID
		{
			get
			{
				return this._USUARIO_ID;
			}
			set
			{
				if ((this._USUARIO_ID != value))
				{
					this.OnUSUARIO_IDChanging(value);
					this.SendPropertyChanging();
					this._USUARIO_ID = value;
					this.SendPropertyChanged("USUARIO_ID");
					this.OnUSUARIO_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HORA", DbType="DateTime")]
		public System.Nullable<System.DateTime> HORA
		{
			get
			{
				return this._HORA;
			}
			set
			{
				if ((this._HORA != value))
				{
					this.OnHORAChanging(value);
					this.SendPropertyChanging();
					this._HORA = value;
					this.SendPropertyChanged("HORA");
					this.OnHORAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACCION", DbType="NVarChar(250)")]
		public string ACCION
		{
			get
			{
				return this._ACCION;
			}
			set
			{
				if ((this._ACCION != value))
				{
					this.OnACCIONChanging(value);
					this.SendPropertyChanging();
					this._ACCION = value;
					this.SendPropertyChanged("ACCION");
					this.OnACCIONChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CATEGORIA")]
	public partial class CATEGORIA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CATEGORIA_ID;
		
		private string _NOMBRE;
		
		private string _DESCRIPCION;
		
		private EntitySet<PRODUCTO> _PRODUCTOs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCATEGORIA_IDChanging(int value);
    partial void OnCATEGORIA_IDChanged();
    partial void OnNOMBREChanging(string value);
    partial void OnNOMBREChanged();
    partial void OnDESCRIPCIONChanging(string value);
    partial void OnDESCRIPCIONChanged();
    #endregion
		
		public CATEGORIA()
		{
			this._PRODUCTOs = new EntitySet<PRODUCTO>(new Action<PRODUCTO>(this.attach_PRODUCTOs), new Action<PRODUCTO>(this.detach_PRODUCTOs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CATEGORIA_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CATEGORIA_ID
		{
			get
			{
				return this._CATEGORIA_ID;
			}
			set
			{
				if ((this._CATEGORIA_ID != value))
				{
					this.OnCATEGORIA_IDChanging(value);
					this.SendPropertyChanging();
					this._CATEGORIA_ID = value;
					this.SendPropertyChanged("CATEGORIA_ID");
					this.OnCATEGORIA_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOMBRE", DbType="NVarChar(50)")]
		public string NOMBRE
		{
			get
			{
				return this._NOMBRE;
			}
			set
			{
				if ((this._NOMBRE != value))
				{
					this.OnNOMBREChanging(value);
					this.SendPropertyChanging();
					this._NOMBRE = value;
					this.SendPropertyChanged("NOMBRE");
					this.OnNOMBREChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DESCRIPCION", DbType="NVarChar(250)")]
		public string DESCRIPCION
		{
			get
			{
				return this._DESCRIPCION;
			}
			set
			{
				if ((this._DESCRIPCION != value))
				{
					this.OnDESCRIPCIONChanging(value);
					this.SendPropertyChanging();
					this._DESCRIPCION = value;
					this.SendPropertyChanged("DESCRIPCION");
					this.OnDESCRIPCIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CATEGORIA_PRODUCTO", Storage="_PRODUCTOs", ThisKey="CATEGORIA_ID", OtherKey="CATEGORIA_ID")]
		public EntitySet<PRODUCTO> PRODUCTOs
		{
			get
			{
				return this._PRODUCTOs;
			}
			set
			{
				this._PRODUCTOs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PRODUCTOs(PRODUCTO entity)
		{
			this.SendPropertyChanging();
			entity.CATEGORIA = this;
		}
		
		private void detach_PRODUCTOs(PRODUCTO entity)
		{
			this.SendPropertyChanging();
			entity.CATEGORIA = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DATO_FISCAL")]
	public partial class DATO_FISCAL : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DATOS_FISCALES_ID;
		
		private string _RFC;
		
		private string _RAZON_SOCIAL;
		
		private EntitySet<USUARIO> _USUARIOs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDATOS_FISCALES_IDChanging(int value);
    partial void OnDATOS_FISCALES_IDChanged();
    partial void OnRFCChanging(string value);
    partial void OnRFCChanged();
    partial void OnRAZON_SOCIALChanging(string value);
    partial void OnRAZON_SOCIALChanged();
    #endregion
		
		public DATO_FISCAL()
		{
			this._USUARIOs = new EntitySet<USUARIO>(new Action<USUARIO>(this.attach_USUARIOs), new Action<USUARIO>(this.detach_USUARIOs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATOS_FISCALES_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DATOS_FISCALES_ID
		{
			get
			{
				return this._DATOS_FISCALES_ID;
			}
			set
			{
				if ((this._DATOS_FISCALES_ID != value))
				{
					this.OnDATOS_FISCALES_IDChanging(value);
					this.SendPropertyChanging();
					this._DATOS_FISCALES_ID = value;
					this.SendPropertyChanged("DATOS_FISCALES_ID");
					this.OnDATOS_FISCALES_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RFC", DbType="NVarChar(50)")]
		public string RFC
		{
			get
			{
				return this._RFC;
			}
			set
			{
				if ((this._RFC != value))
				{
					this.OnRFCChanging(value);
					this.SendPropertyChanging();
					this._RFC = value;
					this.SendPropertyChanged("RFC");
					this.OnRFCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RAZON_SOCIAL", DbType="NVarChar(50)")]
		public string RAZON_SOCIAL
		{
			get
			{
				return this._RAZON_SOCIAL;
			}
			set
			{
				if ((this._RAZON_SOCIAL != value))
				{
					this.OnRAZON_SOCIALChanging(value);
					this.SendPropertyChanging();
					this._RAZON_SOCIAL = value;
					this.SendPropertyChanged("RAZON_SOCIAL");
					this.OnRAZON_SOCIALChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DATO_FISCAL_USUARIO", Storage="_USUARIOs", ThisKey="DATOS_FISCALES_ID", OtherKey="DATOS_FISCALES_ID")]
		public EntitySet<USUARIO> USUARIOs
		{
			get
			{
				return this._USUARIOs;
			}
			set
			{
				this._USUARIOs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_USUARIOs(USUARIO entity)
		{
			this.SendPropertyChanging();
			entity.DATO_FISCAL = this;
		}
		
		private void detach_USUARIOs(USUARIO entity)
		{
			this.SendPropertyChanging();
			entity.DATO_FISCAL = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EMPLEADO")]
	public partial class EMPLEADO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EMPLEADOS_ID;
		
		private System.Nullable<int> _USUARIO_ID;
		
		private string _PUESTO;
		
		private EntityRef<USUARIO> _USUARIO;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEMPLEADOS_IDChanging(int value);
    partial void OnEMPLEADOS_IDChanged();
    partial void OnUSUARIO_IDChanging(System.Nullable<int> value);
    partial void OnUSUARIO_IDChanged();
    partial void OnPUESTOChanging(string value);
    partial void OnPUESTOChanged();
    #endregion
		
		public EMPLEADO()
		{
			this._USUARIO = default(EntityRef<USUARIO>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMPLEADOS_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int EMPLEADOS_ID
		{
			get
			{
				return this._EMPLEADOS_ID;
			}
			set
			{
				if ((this._EMPLEADOS_ID != value))
				{
					this.OnEMPLEADOS_IDChanging(value);
					this.SendPropertyChanging();
					this._EMPLEADOS_ID = value;
					this.SendPropertyChanged("EMPLEADOS_ID");
					this.OnEMPLEADOS_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USUARIO_ID", DbType="Int")]
		public System.Nullable<int> USUARIO_ID
		{
			get
			{
				return this._USUARIO_ID;
			}
			set
			{
				if ((this._USUARIO_ID != value))
				{
					if (this._USUARIO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUSUARIO_IDChanging(value);
					this.SendPropertyChanging();
					this._USUARIO_ID = value;
					this.SendPropertyChanged("USUARIO_ID");
					this.OnUSUARIO_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PUESTO", DbType="NVarChar(50)")]
		public string PUESTO
		{
			get
			{
				return this._PUESTO;
			}
			set
			{
				if ((this._PUESTO != value))
				{
					this.OnPUESTOChanging(value);
					this.SendPropertyChanging();
					this._PUESTO = value;
					this.SendPropertyChanged("PUESTO");
					this.OnPUESTOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="USUARIO_EMPLEADO", Storage="_USUARIO", ThisKey="USUARIO_ID", OtherKey="USUARIO_ID", IsForeignKey=true)]
		public USUARIO USUARIO
		{
			get
			{
				return this._USUARIO.Entity;
			}
			set
			{
				USUARIO previousValue = this._USUARIO.Entity;
				if (((previousValue != value) 
							|| (this._USUARIO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._USUARIO.Entity = null;
						previousValue.EMPLEADOs.Remove(this);
					}
					this._USUARIO.Entity = value;
					if ((value != null))
					{
						value.EMPLEADOs.Add(this);
						this._USUARIO_ID = value.USUARIO_ID;
					}
					else
					{
						this._USUARIO_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("USUARIO");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EMPRESA")]
	public partial class EMPRESA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EMPRESA_ID;
		
		private string _LOGO;
		
		private string _CEDULA;
		
		private string _TELEFONO;
		
		private string _CORREO;
		
		private System.Nullable<int> _USUARIO_ID;
		
		private EntitySet<EMPRESA_EMPLEADO> _EMPRESA_EMPLEADOs;
		
		private EntitySet<MATRIZ_SUCURSAL> _MATRIZ_SUCURSALs;
		
		private EntityRef<USUARIO> _USUARIO;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEMPRESA_IDChanging(int value);
    partial void OnEMPRESA_IDChanged();
    partial void OnLOGOChanging(string value);
    partial void OnLOGOChanged();
    partial void OnCEDULAChanging(string value);
    partial void OnCEDULAChanged();
    partial void OnTELEFONOChanging(string value);
    partial void OnTELEFONOChanged();
    partial void OnCORREOChanging(string value);
    partial void OnCORREOChanged();
    partial void OnUSUARIO_IDChanging(System.Nullable<int> value);
    partial void OnUSUARIO_IDChanged();
    #endregion
		
		public EMPRESA()
		{
			this._EMPRESA_EMPLEADOs = new EntitySet<EMPRESA_EMPLEADO>(new Action<EMPRESA_EMPLEADO>(this.attach_EMPRESA_EMPLEADOs), new Action<EMPRESA_EMPLEADO>(this.detach_EMPRESA_EMPLEADOs));
			this._MATRIZ_SUCURSALs = new EntitySet<MATRIZ_SUCURSAL>(new Action<MATRIZ_SUCURSAL>(this.attach_MATRIZ_SUCURSALs), new Action<MATRIZ_SUCURSAL>(this.detach_MATRIZ_SUCURSALs));
			this._USUARIO = default(EntityRef<USUARIO>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMPRESA_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int EMPRESA_ID
		{
			get
			{
				return this._EMPRESA_ID;
			}
			set
			{
				if ((this._EMPRESA_ID != value))
				{
					this.OnEMPRESA_IDChanging(value);
					this.SendPropertyChanging();
					this._EMPRESA_ID = value;
					this.SendPropertyChanged("EMPRESA_ID");
					this.OnEMPRESA_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LOGO", DbType="NVarChar(150)")]
		public string LOGO
		{
			get
			{
				return this._LOGO;
			}
			set
			{
				if ((this._LOGO != value))
				{
					this.OnLOGOChanging(value);
					this.SendPropertyChanging();
					this._LOGO = value;
					this.SendPropertyChanged("LOGO");
					this.OnLOGOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CEDULA", DbType="NVarChar(50)")]
		public string CEDULA
		{
			get
			{
				return this._CEDULA;
			}
			set
			{
				if ((this._CEDULA != value))
				{
					this.OnCEDULAChanging(value);
					this.SendPropertyChanging();
					this._CEDULA = value;
					this.SendPropertyChanged("CEDULA");
					this.OnCEDULAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TELEFONO", DbType="NVarChar(50)")]
		public string TELEFONO
		{
			get
			{
				return this._TELEFONO;
			}
			set
			{
				if ((this._TELEFONO != value))
				{
					this.OnTELEFONOChanging(value);
					this.SendPropertyChanging();
					this._TELEFONO = value;
					this.SendPropertyChanged("TELEFONO");
					this.OnTELEFONOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CORREO", DbType="NVarChar(50)")]
		public string CORREO
		{
			get
			{
				return this._CORREO;
			}
			set
			{
				if ((this._CORREO != value))
				{
					this.OnCORREOChanging(value);
					this.SendPropertyChanging();
					this._CORREO = value;
					this.SendPropertyChanged("CORREO");
					this.OnCORREOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USUARIO_ID", DbType="Int")]
		public System.Nullable<int> USUARIO_ID
		{
			get
			{
				return this._USUARIO_ID;
			}
			set
			{
				if ((this._USUARIO_ID != value))
				{
					if (this._USUARIO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUSUARIO_IDChanging(value);
					this.SendPropertyChanging();
					this._USUARIO_ID = value;
					this.SendPropertyChanged("USUARIO_ID");
					this.OnUSUARIO_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EMPRESA_EMPRESA_EMPLEADO", Storage="_EMPRESA_EMPLEADOs", ThisKey="EMPRESA_ID", OtherKey="EMPRESA_ID")]
		public EntitySet<EMPRESA_EMPLEADO> EMPRESA_EMPLEADOs
		{
			get
			{
				return this._EMPRESA_EMPLEADOs;
			}
			set
			{
				this._EMPRESA_EMPLEADOs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EMPRESA_MATRIZ_SUCURSAL", Storage="_MATRIZ_SUCURSALs", ThisKey="EMPRESA_ID", OtherKey="EMPRESA_ID")]
		public EntitySet<MATRIZ_SUCURSAL> MATRIZ_SUCURSALs
		{
			get
			{
				return this._MATRIZ_SUCURSALs;
			}
			set
			{
				this._MATRIZ_SUCURSALs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="USUARIO_EMPRESA", Storage="_USUARIO", ThisKey="USUARIO_ID", OtherKey="USUARIO_ID", IsForeignKey=true)]
		public USUARIO USUARIO
		{
			get
			{
				return this._USUARIO.Entity;
			}
			set
			{
				USUARIO previousValue = this._USUARIO.Entity;
				if (((previousValue != value) 
							|| (this._USUARIO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._USUARIO.Entity = null;
						previousValue.EMPRESAs.Remove(this);
					}
					this._USUARIO.Entity = value;
					if ((value != null))
					{
						value.EMPRESAs.Add(this);
						this._USUARIO_ID = value.USUARIO_ID;
					}
					else
					{
						this._USUARIO_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("USUARIO");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EMPRESA_EMPLEADOs(EMPRESA_EMPLEADO entity)
		{
			this.SendPropertyChanging();
			entity.EMPRESA = this;
		}
		
		private void detach_EMPRESA_EMPLEADOs(EMPRESA_EMPLEADO entity)
		{
			this.SendPropertyChanging();
			entity.EMPRESA = null;
		}
		
		private void attach_MATRIZ_SUCURSALs(MATRIZ_SUCURSAL entity)
		{
			this.SendPropertyChanging();
			entity.EMPRESA = this;
		}
		
		private void detach_MATRIZ_SUCURSALs(MATRIZ_SUCURSAL entity)
		{
			this.SendPropertyChanging();
			entity.EMPRESA = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EMPRESA_EMPLEADO")]
	public partial class EMPRESA_EMPLEADO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EMPRESA_EMPLEADO_ID;
		
		private int _EMPRESA_ID;
		
		private int _EMPLEADO_ID;
		
		private EntityRef<EMPRESA> _EMPRESA;
		
		private EntityRef<USUARIO> _USUARIO;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEMPRESA_EMPLEADO_IDChanging(int value);
    partial void OnEMPRESA_EMPLEADO_IDChanged();
    partial void OnEMPRESA_IDChanging(int value);
    partial void OnEMPRESA_IDChanged();
    partial void OnEMPLEADO_IDChanging(int value);
    partial void OnEMPLEADO_IDChanged();
    #endregion
		
		public EMPRESA_EMPLEADO()
		{
			this._EMPRESA = default(EntityRef<EMPRESA>);
			this._USUARIO = default(EntityRef<USUARIO>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMPRESA_EMPLEADO_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int EMPRESA_EMPLEADO_ID
		{
			get
			{
				return this._EMPRESA_EMPLEADO_ID;
			}
			set
			{
				if ((this._EMPRESA_EMPLEADO_ID != value))
				{
					this.OnEMPRESA_EMPLEADO_IDChanging(value);
					this.SendPropertyChanging();
					this._EMPRESA_EMPLEADO_ID = value;
					this.SendPropertyChanged("EMPRESA_EMPLEADO_ID");
					this.OnEMPRESA_EMPLEADO_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMPRESA_ID", DbType="Int NOT NULL")]
		public int EMPRESA_ID
		{
			get
			{
				return this._EMPRESA_ID;
			}
			set
			{
				if ((this._EMPRESA_ID != value))
				{
					if (this._EMPRESA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEMPRESA_IDChanging(value);
					this.SendPropertyChanging();
					this._EMPRESA_ID = value;
					this.SendPropertyChanged("EMPRESA_ID");
					this.OnEMPRESA_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMPLEADO_ID", DbType="Int NOT NULL")]
		public int EMPLEADO_ID
		{
			get
			{
				return this._EMPLEADO_ID;
			}
			set
			{
				if ((this._EMPLEADO_ID != value))
				{
					if (this._USUARIO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEMPLEADO_IDChanging(value);
					this.SendPropertyChanging();
					this._EMPLEADO_ID = value;
					this.SendPropertyChanged("EMPLEADO_ID");
					this.OnEMPLEADO_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EMPRESA_EMPRESA_EMPLEADO", Storage="_EMPRESA", ThisKey="EMPRESA_ID", OtherKey="EMPRESA_ID", IsForeignKey=true)]
		public EMPRESA EMPRESA
		{
			get
			{
				return this._EMPRESA.Entity;
			}
			set
			{
				EMPRESA previousValue = this._EMPRESA.Entity;
				if (((previousValue != value) 
							|| (this._EMPRESA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EMPRESA.Entity = null;
						previousValue.EMPRESA_EMPLEADOs.Remove(this);
					}
					this._EMPRESA.Entity = value;
					if ((value != null))
					{
						value.EMPRESA_EMPLEADOs.Add(this);
						this._EMPRESA_ID = value.EMPRESA_ID;
					}
					else
					{
						this._EMPRESA_ID = default(int);
					}
					this.SendPropertyChanged("EMPRESA");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="USUARIO_EMPRESA_EMPLEADO", Storage="_USUARIO", ThisKey="EMPLEADO_ID", OtherKey="USUARIO_ID", IsForeignKey=true)]
		public USUARIO USUARIO
		{
			get
			{
				return this._USUARIO.Entity;
			}
			set
			{
				USUARIO previousValue = this._USUARIO.Entity;
				if (((previousValue != value) 
							|| (this._USUARIO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._USUARIO.Entity = null;
						previousValue.EMPRESA_EMPLEADOs.Remove(this);
					}
					this._USUARIO.Entity = value;
					if ((value != null))
					{
						value.EMPRESA_EMPLEADOs.Add(this);
						this._EMPLEADO_ID = value.USUARIO_ID;
					}
					else
					{
						this._EMPLEADO_ID = default(int);
					}
					this.SendPropertyChanged("USUARIO");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ESTADO")]
	public partial class ESTADO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ESTATUS_ID;
		
		private string _NOMBRE;
		
		private EntitySet<FACTURA> _FACTURAs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnESTATUS_IDChanging(int value);
    partial void OnESTATUS_IDChanged();
    partial void OnNOMBREChanging(string value);
    partial void OnNOMBREChanged();
    #endregion
		
		public ESTADO()
		{
			this._FACTURAs = new EntitySet<FACTURA>(new Action<FACTURA>(this.attach_FACTURAs), new Action<FACTURA>(this.detach_FACTURAs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ESTATUS_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ESTATUS_ID
		{
			get
			{
				return this._ESTATUS_ID;
			}
			set
			{
				if ((this._ESTATUS_ID != value))
				{
					this.OnESTATUS_IDChanging(value);
					this.SendPropertyChanging();
					this._ESTATUS_ID = value;
					this.SendPropertyChanged("ESTATUS_ID");
					this.OnESTATUS_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOMBRE", DbType="NVarChar(50)")]
		public string NOMBRE
		{
			get
			{
				return this._NOMBRE;
			}
			set
			{
				if ((this._NOMBRE != value))
				{
					this.OnNOMBREChanging(value);
					this.SendPropertyChanging();
					this._NOMBRE = value;
					this.SendPropertyChanged("NOMBRE");
					this.OnNOMBREChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ESTADO_FACTURA", Storage="_FACTURAs", ThisKey="ESTATUS_ID", OtherKey="ESTATUS_ID")]
		public EntitySet<FACTURA> FACTURAs
		{
			get
			{
				return this._FACTURAs;
			}
			set
			{
				this._FACTURAs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FACTURAs(FACTURA entity)
		{
			this.SendPropertyChanging();
			entity.ESTADO = this;
		}
		
		private void detach_FACTURAs(FACTURA entity)
		{
			this.SendPropertyChanging();
			entity.ESTADO = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FACTURA")]
	public partial class FACTURA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FACTURA_ID;
		
		private int _USUARIO_ID;
		
		private int _MONEDA_ID;
		
		private int _TIPO_PAGO_ID;
		
		private int _FORMA_PAGO_ID;
		
		private int _ESTATUS_ID;
		
		private int _FOLIOS_ID;
		
		private string _CADENA_ORIGINAL;
		
		private int _ADUANA_ID;
		
		private EntitySet<FACTURA_PRODUCTO> _FACTURA_PRODUCTOs;
		
		private EntityRef<ESTADO> _ESTADO;
		
		private EntityRef<FORMA_PAGO> _FORMA_PAGO;
		
		private EntityRef<MONEDA> _MONEDA;
		
		private EntityRef<TIPO_PAGO> _TIPO_PAGO;
		
		private EntityRef<USUARIO> _USUARIO;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFACTURA_IDChanging(int value);
    partial void OnFACTURA_IDChanged();
    partial void OnUSUARIO_IDChanging(int value);
    partial void OnUSUARIO_IDChanged();
    partial void OnMONEDA_IDChanging(int value);
    partial void OnMONEDA_IDChanged();
    partial void OnTIPO_PAGO_IDChanging(int value);
    partial void OnTIPO_PAGO_IDChanged();
    partial void OnFORMA_PAGO_IDChanging(int value);
    partial void OnFORMA_PAGO_IDChanged();
    partial void OnESTATUS_IDChanging(int value);
    partial void OnESTATUS_IDChanged();
    partial void OnFOLIOS_IDChanging(int value);
    partial void OnFOLIOS_IDChanged();
    partial void OnCADENA_ORIGINALChanging(string value);
    partial void OnCADENA_ORIGINALChanged();
    partial void OnADUANA_IDChanging(int value);
    partial void OnADUANA_IDChanged();
    #endregion
		
		public FACTURA()
		{
			this._FACTURA_PRODUCTOs = new EntitySet<FACTURA_PRODUCTO>(new Action<FACTURA_PRODUCTO>(this.attach_FACTURA_PRODUCTOs), new Action<FACTURA_PRODUCTO>(this.detach_FACTURA_PRODUCTOs));
			this._ESTADO = default(EntityRef<ESTADO>);
			this._FORMA_PAGO = default(EntityRef<FORMA_PAGO>);
			this._MONEDA = default(EntityRef<MONEDA>);
			this._TIPO_PAGO = default(EntityRef<TIPO_PAGO>);
			this._USUARIO = default(EntityRef<USUARIO>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FACTURA_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int FACTURA_ID
		{
			get
			{
				return this._FACTURA_ID;
			}
			set
			{
				if ((this._FACTURA_ID != value))
				{
					this.OnFACTURA_IDChanging(value);
					this.SendPropertyChanging();
					this._FACTURA_ID = value;
					this.SendPropertyChanged("FACTURA_ID");
					this.OnFACTURA_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USUARIO_ID", DbType="Int NOT NULL")]
		public int USUARIO_ID
		{
			get
			{
				return this._USUARIO_ID;
			}
			set
			{
				if ((this._USUARIO_ID != value))
				{
					if (this._USUARIO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUSUARIO_IDChanging(value);
					this.SendPropertyChanging();
					this._USUARIO_ID = value;
					this.SendPropertyChanged("USUARIO_ID");
					this.OnUSUARIO_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MONEDA_ID", DbType="Int NOT NULL")]
		public int MONEDA_ID
		{
			get
			{
				return this._MONEDA_ID;
			}
			set
			{
				if ((this._MONEDA_ID != value))
				{
					if (this._MONEDA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMONEDA_IDChanging(value);
					this.SendPropertyChanging();
					this._MONEDA_ID = value;
					this.SendPropertyChanged("MONEDA_ID");
					this.OnMONEDA_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TIPO_PAGO_ID", DbType="Int NOT NULL")]
		public int TIPO_PAGO_ID
		{
			get
			{
				return this._TIPO_PAGO_ID;
			}
			set
			{
				if ((this._TIPO_PAGO_ID != value))
				{
					if (this._TIPO_PAGO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTIPO_PAGO_IDChanging(value);
					this.SendPropertyChanging();
					this._TIPO_PAGO_ID = value;
					this.SendPropertyChanged("TIPO_PAGO_ID");
					this.OnTIPO_PAGO_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FORMA_PAGO_ID", DbType="Int NOT NULL")]
		public int FORMA_PAGO_ID
		{
			get
			{
				return this._FORMA_PAGO_ID;
			}
			set
			{
				if ((this._FORMA_PAGO_ID != value))
				{
					if (this._FORMA_PAGO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFORMA_PAGO_IDChanging(value);
					this.SendPropertyChanging();
					this._FORMA_PAGO_ID = value;
					this.SendPropertyChanged("FORMA_PAGO_ID");
					this.OnFORMA_PAGO_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ESTATUS_ID", DbType="Int NOT NULL")]
		public int ESTATUS_ID
		{
			get
			{
				return this._ESTATUS_ID;
			}
			set
			{
				if ((this._ESTATUS_ID != value))
				{
					if (this._ESTADO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnESTATUS_IDChanging(value);
					this.SendPropertyChanging();
					this._ESTATUS_ID = value;
					this.SendPropertyChanged("ESTATUS_ID");
					this.OnESTATUS_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FOLIOS_ID", DbType="Int NOT NULL")]
		public int FOLIOS_ID
		{
			get
			{
				return this._FOLIOS_ID;
			}
			set
			{
				if ((this._FOLIOS_ID != value))
				{
					this.OnFOLIOS_IDChanging(value);
					this.SendPropertyChanging();
					this._FOLIOS_ID = value;
					this.SendPropertyChanged("FOLIOS_ID");
					this.OnFOLIOS_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CADENA_ORIGINAL", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string CADENA_ORIGINAL
		{
			get
			{
				return this._CADENA_ORIGINAL;
			}
			set
			{
				if ((this._CADENA_ORIGINAL != value))
				{
					this.OnCADENA_ORIGINALChanging(value);
					this.SendPropertyChanging();
					this._CADENA_ORIGINAL = value;
					this.SendPropertyChanged("CADENA_ORIGINAL");
					this.OnCADENA_ORIGINALChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ADUANA_ID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int ADUANA_ID
		{
			get
			{
				return this._ADUANA_ID;
			}
			set
			{
				if ((this._ADUANA_ID != value))
				{
					this.OnADUANA_IDChanging(value);
					this.SendPropertyChanging();
					this._ADUANA_ID = value;
					this.SendPropertyChanged("ADUANA_ID");
					this.OnADUANA_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FACTURA_FACTURA_PRODUCTO", Storage="_FACTURA_PRODUCTOs", ThisKey="FACTURA_ID", OtherKey="FACURA_ID")]
		public EntitySet<FACTURA_PRODUCTO> FACTURA_PRODUCTOs
		{
			get
			{
				return this._FACTURA_PRODUCTOs;
			}
			set
			{
				this._FACTURA_PRODUCTOs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ESTADO_FACTURA", Storage="_ESTADO", ThisKey="ESTATUS_ID", OtherKey="ESTATUS_ID", IsForeignKey=true)]
		public ESTADO ESTADO
		{
			get
			{
				return this._ESTADO.Entity;
			}
			set
			{
				ESTADO previousValue = this._ESTADO.Entity;
				if (((previousValue != value) 
							|| (this._ESTADO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ESTADO.Entity = null;
						previousValue.FACTURAs.Remove(this);
					}
					this._ESTADO.Entity = value;
					if ((value != null))
					{
						value.FACTURAs.Add(this);
						this._ESTATUS_ID = value.ESTATUS_ID;
					}
					else
					{
						this._ESTATUS_ID = default(int);
					}
					this.SendPropertyChanged("ESTADO");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FORMA_PAGO_FACTURA", Storage="_FORMA_PAGO", ThisKey="FORMA_PAGO_ID", OtherKey="FORMA_PAGO_ID", IsForeignKey=true)]
		public FORMA_PAGO FORMA_PAGO
		{
			get
			{
				return this._FORMA_PAGO.Entity;
			}
			set
			{
				FORMA_PAGO previousValue = this._FORMA_PAGO.Entity;
				if (((previousValue != value) 
							|| (this._FORMA_PAGO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FORMA_PAGO.Entity = null;
						previousValue.FACTURAs.Remove(this);
					}
					this._FORMA_PAGO.Entity = value;
					if ((value != null))
					{
						value.FACTURAs.Add(this);
						this._FORMA_PAGO_ID = value.FORMA_PAGO_ID;
					}
					else
					{
						this._FORMA_PAGO_ID = default(int);
					}
					this.SendPropertyChanged("FORMA_PAGO");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MONEDA_FACTURA", Storage="_MONEDA", ThisKey="MONEDA_ID", OtherKey="MONEDA_ID", IsForeignKey=true)]
		public MONEDA MONEDA
		{
			get
			{
				return this._MONEDA.Entity;
			}
			set
			{
				MONEDA previousValue = this._MONEDA.Entity;
				if (((previousValue != value) 
							|| (this._MONEDA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MONEDA.Entity = null;
						previousValue.FACTURAs.Remove(this);
					}
					this._MONEDA.Entity = value;
					if ((value != null))
					{
						value.FACTURAs.Add(this);
						this._MONEDA_ID = value.MONEDA_ID;
					}
					else
					{
						this._MONEDA_ID = default(int);
					}
					this.SendPropertyChanged("MONEDA");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TIPO_PAGO_FACTURA", Storage="_TIPO_PAGO", ThisKey="TIPO_PAGO_ID", OtherKey="TIPO_PAGO_ID", IsForeignKey=true)]
		public TIPO_PAGO TIPO_PAGO
		{
			get
			{
				return this._TIPO_PAGO.Entity;
			}
			set
			{
				TIPO_PAGO previousValue = this._TIPO_PAGO.Entity;
				if (((previousValue != value) 
							|| (this._TIPO_PAGO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TIPO_PAGO.Entity = null;
						previousValue.FACTURAs.Remove(this);
					}
					this._TIPO_PAGO.Entity = value;
					if ((value != null))
					{
						value.FACTURAs.Add(this);
						this._TIPO_PAGO_ID = value.TIPO_PAGO_ID;
					}
					else
					{
						this._TIPO_PAGO_ID = default(int);
					}
					this.SendPropertyChanged("TIPO_PAGO");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="USUARIO_FACTURA", Storage="_USUARIO", ThisKey="USUARIO_ID", OtherKey="USUARIO_ID", IsForeignKey=true)]
		public USUARIO USUARIO
		{
			get
			{
				return this._USUARIO.Entity;
			}
			set
			{
				USUARIO previousValue = this._USUARIO.Entity;
				if (((previousValue != value) 
							|| (this._USUARIO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._USUARIO.Entity = null;
						previousValue.FACTURAs.Remove(this);
					}
					this._USUARIO.Entity = value;
					if ((value != null))
					{
						value.FACTURAs.Add(this);
						this._USUARIO_ID = value.USUARIO_ID;
					}
					else
					{
						this._USUARIO_ID = default(int);
					}
					this.SendPropertyChanged("USUARIO");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FACTURA_PRODUCTOs(FACTURA_PRODUCTO entity)
		{
			this.SendPropertyChanging();
			entity.FACTURA = this;
		}
		
		private void detach_FACTURA_PRODUCTOs(FACTURA_PRODUCTO entity)
		{
			this.SendPropertyChanging();
			entity.FACTURA = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FACTURA_DETALLE")]
	public partial class FACTURA_DETALLE
	{
		
		private System.Nullable<int> _DETALLE_ID;
		
		private System.Nullable<int> _FACTURA_PRODUCTO_ID;
		
		private System.Nullable<int> _FACTURA_ID;
		
		private System.Nullable<int> _IMPUESTO_ID;
		
		private System.Nullable<double> _TASA;
		
		public FACTURA_DETALLE()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DETALLE_ID", DbType="Int")]
		public System.Nullable<int> DETALLE_ID
		{
			get
			{
				return this._DETALLE_ID;
			}
			set
			{
				if ((this._DETALLE_ID != value))
				{
					this._DETALLE_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FACTURA_PRODUCTO_ID", DbType="Int")]
		public System.Nullable<int> FACTURA_PRODUCTO_ID
		{
			get
			{
				return this._FACTURA_PRODUCTO_ID;
			}
			set
			{
				if ((this._FACTURA_PRODUCTO_ID != value))
				{
					this._FACTURA_PRODUCTO_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FACTURA_ID", DbType="Int")]
		public System.Nullable<int> FACTURA_ID
		{
			get
			{
				return this._FACTURA_ID;
			}
			set
			{
				if ((this._FACTURA_ID != value))
				{
					this._FACTURA_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IMPUESTO_ID", DbType="Int")]
		public System.Nullable<int> IMPUESTO_ID
		{
			get
			{
				return this._IMPUESTO_ID;
			}
			set
			{
				if ((this._IMPUESTO_ID != value))
				{
					this._IMPUESTO_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TASA", DbType="Float")]
		public System.Nullable<double> TASA
		{
			get
			{
				return this._TASA;
			}
			set
			{
				if ((this._TASA != value))
				{
					this._TASA = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FACTURA_PRODUCTO")]
	public partial class FACTURA_PRODUCTO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FACTURA_PRODUCTO_ID;
		
		private int _FACURA_ID;
		
		private int _PRODUCTO_ID;
		
		private double _CANTIDAD;
		
		private EntityRef<FACTURA> _FACTURA;
		
		private EntityRef<PRODUCTO> _PRODUCTO;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFACTURA_PRODUCTO_IDChanging(int value);
    partial void OnFACTURA_PRODUCTO_IDChanged();
    partial void OnFACURA_IDChanging(int value);
    partial void OnFACURA_IDChanged();
    partial void OnPRODUCTO_IDChanging(int value);
    partial void OnPRODUCTO_IDChanged();
    partial void OnCANTIDADChanging(double value);
    partial void OnCANTIDADChanged();
    #endregion
		
		public FACTURA_PRODUCTO()
		{
			this._FACTURA = default(EntityRef<FACTURA>);
			this._PRODUCTO = default(EntityRef<PRODUCTO>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FACTURA_PRODUCTO_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int FACTURA_PRODUCTO_ID
		{
			get
			{
				return this._FACTURA_PRODUCTO_ID;
			}
			set
			{
				if ((this._FACTURA_PRODUCTO_ID != value))
				{
					this.OnFACTURA_PRODUCTO_IDChanging(value);
					this.SendPropertyChanging();
					this._FACTURA_PRODUCTO_ID = value;
					this.SendPropertyChanged("FACTURA_PRODUCTO_ID");
					this.OnFACTURA_PRODUCTO_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FACURA_ID", DbType="Int NOT NULL")]
		public int FACURA_ID
		{
			get
			{
				return this._FACURA_ID;
			}
			set
			{
				if ((this._FACURA_ID != value))
				{
					if (this._FACTURA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFACURA_IDChanging(value);
					this.SendPropertyChanging();
					this._FACURA_ID = value;
					this.SendPropertyChanged("FACURA_ID");
					this.OnFACURA_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRODUCTO_ID", DbType="Int NOT NULL")]
		public int PRODUCTO_ID
		{
			get
			{
				return this._PRODUCTO_ID;
			}
			set
			{
				if ((this._PRODUCTO_ID != value))
				{
					if (this._PRODUCTO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPRODUCTO_IDChanging(value);
					this.SendPropertyChanging();
					this._PRODUCTO_ID = value;
					this.SendPropertyChanged("PRODUCTO_ID");
					this.OnPRODUCTO_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CANTIDAD", DbType="Float NOT NULL")]
		public double CANTIDAD
		{
			get
			{
				return this._CANTIDAD;
			}
			set
			{
				if ((this._CANTIDAD != value))
				{
					this.OnCANTIDADChanging(value);
					this.SendPropertyChanging();
					this._CANTIDAD = value;
					this.SendPropertyChanged("CANTIDAD");
					this.OnCANTIDADChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FACTURA_FACTURA_PRODUCTO", Storage="_FACTURA", ThisKey="FACURA_ID", OtherKey="FACTURA_ID", IsForeignKey=true)]
		public FACTURA FACTURA
		{
			get
			{
				return this._FACTURA.Entity;
			}
			set
			{
				FACTURA previousValue = this._FACTURA.Entity;
				if (((previousValue != value) 
							|| (this._FACTURA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FACTURA.Entity = null;
						previousValue.FACTURA_PRODUCTOs.Remove(this);
					}
					this._FACTURA.Entity = value;
					if ((value != null))
					{
						value.FACTURA_PRODUCTOs.Add(this);
						this._FACURA_ID = value.FACTURA_ID;
					}
					else
					{
						this._FACURA_ID = default(int);
					}
					this.SendPropertyChanged("FACTURA");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PRODUCTO_FACTURA_PRODUCTO", Storage="_PRODUCTO", ThisKey="PRODUCTO_ID", OtherKey="PRODUCTO_ID", IsForeignKey=true)]
		public PRODUCTO PRODUCTO
		{
			get
			{
				return this._PRODUCTO.Entity;
			}
			set
			{
				PRODUCTO previousValue = this._PRODUCTO.Entity;
				if (((previousValue != value) 
							|| (this._PRODUCTO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PRODUCTO.Entity = null;
						previousValue.FACTURA_PRODUCTOs.Remove(this);
					}
					this._PRODUCTO.Entity = value;
					if ((value != null))
					{
						value.FACTURA_PRODUCTOs.Add(this);
						this._PRODUCTO_ID = value.PRODUCTO_ID;
					}
					else
					{
						this._PRODUCTO_ID = default(int);
					}
					this.SendPropertyChanged("PRODUCTO");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FORMA_PAGO")]
	public partial class FORMA_PAGO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FORMA_PAGO_ID;
		
		private string _NOMBRE;
		
		private string _DESCRIPCION;
		
		private EntitySet<FACTURA> _FACTURAs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFORMA_PAGO_IDChanging(int value);
    partial void OnFORMA_PAGO_IDChanged();
    partial void OnNOMBREChanging(string value);
    partial void OnNOMBREChanged();
    partial void OnDESCRIPCIONChanging(string value);
    partial void OnDESCRIPCIONChanged();
    #endregion
		
		public FORMA_PAGO()
		{
			this._FACTURAs = new EntitySet<FACTURA>(new Action<FACTURA>(this.attach_FACTURAs), new Action<FACTURA>(this.detach_FACTURAs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FORMA_PAGO_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int FORMA_PAGO_ID
		{
			get
			{
				return this._FORMA_PAGO_ID;
			}
			set
			{
				if ((this._FORMA_PAGO_ID != value))
				{
					this.OnFORMA_PAGO_IDChanging(value);
					this.SendPropertyChanging();
					this._FORMA_PAGO_ID = value;
					this.SendPropertyChanged("FORMA_PAGO_ID");
					this.OnFORMA_PAGO_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOMBRE", DbType="NVarChar(50)")]
		public string NOMBRE
		{
			get
			{
				return this._NOMBRE;
			}
			set
			{
				if ((this._NOMBRE != value))
				{
					this.OnNOMBREChanging(value);
					this.SendPropertyChanging();
					this._NOMBRE = value;
					this.SendPropertyChanged("NOMBRE");
					this.OnNOMBREChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DESCRIPCION", DbType="NVarChar(250)")]
		public string DESCRIPCION
		{
			get
			{
				return this._DESCRIPCION;
			}
			set
			{
				if ((this._DESCRIPCION != value))
				{
					this.OnDESCRIPCIONChanging(value);
					this.SendPropertyChanging();
					this._DESCRIPCION = value;
					this.SendPropertyChanged("DESCRIPCION");
					this.OnDESCRIPCIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FORMA_PAGO_FACTURA", Storage="_FACTURAs", ThisKey="FORMA_PAGO_ID", OtherKey="FORMA_PAGO_ID")]
		public EntitySet<FACTURA> FACTURAs
		{
			get
			{
				return this._FACTURAs;
			}
			set
			{
				this._FACTURAs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FACTURAs(FACTURA entity)
		{
			this.SendPropertyChanging();
			entity.FORMA_PAGO = this;
		}
		
		private void detach_FACTURAs(FACTURA entity)
		{
			this.SendPropertyChanging();
			entity.FORMA_PAGO = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.IMPUESTO")]
	public partial class IMPUESTO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IMPUESTO_ID;
		
		private string _NOMBRE;
		
		private double _PORCENTAJE;
		
		private string _DESCRIPCION;
		
		private string _TIPO_IMPUESTO;
		
		private EntitySet<IMPUESTOS_PRODUCTO> _IMPUESTOS_PRODUCTOs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIMPUESTO_IDChanging(int value);
    partial void OnIMPUESTO_IDChanged();
    partial void OnNOMBREChanging(string value);
    partial void OnNOMBREChanged();
    partial void OnPORCENTAJEChanging(double value);
    partial void OnPORCENTAJEChanged();
    partial void OnDESCRIPCIONChanging(string value);
    partial void OnDESCRIPCIONChanged();
    partial void OnTIPO_IMPUESTOChanging(string value);
    partial void OnTIPO_IMPUESTOChanged();
    #endregion
		
		public IMPUESTO()
		{
			this._IMPUESTOS_PRODUCTOs = new EntitySet<IMPUESTOS_PRODUCTO>(new Action<IMPUESTOS_PRODUCTO>(this.attach_IMPUESTOS_PRODUCTOs), new Action<IMPUESTOS_PRODUCTO>(this.detach_IMPUESTOS_PRODUCTOs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IMPUESTO_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IMPUESTO_ID
		{
			get
			{
				return this._IMPUESTO_ID;
			}
			set
			{
				if ((this._IMPUESTO_ID != value))
				{
					this.OnIMPUESTO_IDChanging(value);
					this.SendPropertyChanging();
					this._IMPUESTO_ID = value;
					this.SendPropertyChanged("IMPUESTO_ID");
					this.OnIMPUESTO_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOMBRE", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string NOMBRE
		{
			get
			{
				return this._NOMBRE;
			}
			set
			{
				if ((this._NOMBRE != value))
				{
					this.OnNOMBREChanging(value);
					this.SendPropertyChanging();
					this._NOMBRE = value;
					this.SendPropertyChanged("NOMBRE");
					this.OnNOMBREChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PORCENTAJE", DbType="Float NOT NULL")]
		public double PORCENTAJE
		{
			get
			{
				return this._PORCENTAJE;
			}
			set
			{
				if ((this._PORCENTAJE != value))
				{
					this.OnPORCENTAJEChanging(value);
					this.SendPropertyChanging();
					this._PORCENTAJE = value;
					this.SendPropertyChanged("PORCENTAJE");
					this.OnPORCENTAJEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DESCRIPCION", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string DESCRIPCION
		{
			get
			{
				return this._DESCRIPCION;
			}
			set
			{
				if ((this._DESCRIPCION != value))
				{
					this.OnDESCRIPCIONChanging(value);
					this.SendPropertyChanging();
					this._DESCRIPCION = value;
					this.SendPropertyChanged("DESCRIPCION");
					this.OnDESCRIPCIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TIPO_IMPUESTO", DbType="NChar(10)")]
		public string TIPO_IMPUESTO
		{
			get
			{
				return this._TIPO_IMPUESTO;
			}
			set
			{
				if ((this._TIPO_IMPUESTO != value))
				{
					this.OnTIPO_IMPUESTOChanging(value);
					this.SendPropertyChanging();
					this._TIPO_IMPUESTO = value;
					this.SendPropertyChanged("TIPO_IMPUESTO");
					this.OnTIPO_IMPUESTOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="IMPUESTO_IMPUESTOS_PRODUCTO", Storage="_IMPUESTOS_PRODUCTOs", ThisKey="IMPUESTO_ID", OtherKey="IMPUESTO_ID")]
		public EntitySet<IMPUESTOS_PRODUCTO> IMPUESTOS_PRODUCTOs
		{
			get
			{
				return this._IMPUESTOS_PRODUCTOs;
			}
			set
			{
				this._IMPUESTOS_PRODUCTOs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_IMPUESTOS_PRODUCTOs(IMPUESTOS_PRODUCTO entity)
		{
			this.SendPropertyChanging();
			entity.IMPUESTO = this;
		}
		
		private void detach_IMPUESTOS_PRODUCTOs(IMPUESTOS_PRODUCTO entity)
		{
			this.SendPropertyChanging();
			entity.IMPUESTO = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.IMPUESTOS_PRODUCTO")]
	public partial class IMPUESTOS_PRODUCTO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IMPUESTO_PRODUCTO_ID;
		
		private int _IMPUESTO_ID;
		
		private int _PRODUCTO_ID;
		
		private EntityRef<IMPUESTO> _IMPUESTO;
		
		private EntityRef<PRODUCTO> _PRODUCTO;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIMPUESTO_PRODUCTO_IDChanging(int value);
    partial void OnIMPUESTO_PRODUCTO_IDChanged();
    partial void OnIMPUESTO_IDChanging(int value);
    partial void OnIMPUESTO_IDChanged();
    partial void OnPRODUCTO_IDChanging(int value);
    partial void OnPRODUCTO_IDChanged();
    #endregion
		
		public IMPUESTOS_PRODUCTO()
		{
			this._IMPUESTO = default(EntityRef<IMPUESTO>);
			this._PRODUCTO = default(EntityRef<PRODUCTO>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IMPUESTO_PRODUCTO_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IMPUESTO_PRODUCTO_ID
		{
			get
			{
				return this._IMPUESTO_PRODUCTO_ID;
			}
			set
			{
				if ((this._IMPUESTO_PRODUCTO_ID != value))
				{
					this.OnIMPUESTO_PRODUCTO_IDChanging(value);
					this.SendPropertyChanging();
					this._IMPUESTO_PRODUCTO_ID = value;
					this.SendPropertyChanged("IMPUESTO_PRODUCTO_ID");
					this.OnIMPUESTO_PRODUCTO_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IMPUESTO_ID", DbType="Int NOT NULL")]
		public int IMPUESTO_ID
		{
			get
			{
				return this._IMPUESTO_ID;
			}
			set
			{
				if ((this._IMPUESTO_ID != value))
				{
					if (this._IMPUESTO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIMPUESTO_IDChanging(value);
					this.SendPropertyChanging();
					this._IMPUESTO_ID = value;
					this.SendPropertyChanged("IMPUESTO_ID");
					this.OnIMPUESTO_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRODUCTO_ID", DbType="Int NOT NULL")]
		public int PRODUCTO_ID
		{
			get
			{
				return this._PRODUCTO_ID;
			}
			set
			{
				if ((this._PRODUCTO_ID != value))
				{
					if (this._PRODUCTO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPRODUCTO_IDChanging(value);
					this.SendPropertyChanging();
					this._PRODUCTO_ID = value;
					this.SendPropertyChanged("PRODUCTO_ID");
					this.OnPRODUCTO_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="IMPUESTO_IMPUESTOS_PRODUCTO", Storage="_IMPUESTO", ThisKey="IMPUESTO_ID", OtherKey="IMPUESTO_ID", IsForeignKey=true)]
		public IMPUESTO IMPUESTO
		{
			get
			{
				return this._IMPUESTO.Entity;
			}
			set
			{
				IMPUESTO previousValue = this._IMPUESTO.Entity;
				if (((previousValue != value) 
							|| (this._IMPUESTO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._IMPUESTO.Entity = null;
						previousValue.IMPUESTOS_PRODUCTOs.Remove(this);
					}
					this._IMPUESTO.Entity = value;
					if ((value != null))
					{
						value.IMPUESTOS_PRODUCTOs.Add(this);
						this._IMPUESTO_ID = value.IMPUESTO_ID;
					}
					else
					{
						this._IMPUESTO_ID = default(int);
					}
					this.SendPropertyChanged("IMPUESTO");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PRODUCTO_IMPUESTOS_PRODUCTO", Storage="_PRODUCTO", ThisKey="PRODUCTO_ID", OtherKey="PRODUCTO_ID", IsForeignKey=true)]
		public PRODUCTO PRODUCTO
		{
			get
			{
				return this._PRODUCTO.Entity;
			}
			set
			{
				PRODUCTO previousValue = this._PRODUCTO.Entity;
				if (((previousValue != value) 
							|| (this._PRODUCTO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PRODUCTO.Entity = null;
						previousValue.IMPUESTOS_PRODUCTOs.Remove(this);
					}
					this._PRODUCTO.Entity = value;
					if ((value != null))
					{
						value.IMPUESTOS_PRODUCTOs.Add(this);
						this._PRODUCTO_ID = value.PRODUCTO_ID;
					}
					else
					{
						this._PRODUCTO_ID = default(int);
					}
					this.SendPropertyChanged("PRODUCTO");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MATRIZ_SUCURSAL")]
	public partial class MATRIZ_SUCURSAL : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MATRIZ_SUCURSAL_ID;
		
		private int _EMPRESA_ID;
		
		private int _SUCURSAL_ID;
		
		private EntityRef<EMPRESA> _EMPRESA;
		
		private EntityRef<USUARIO> _USUARIO;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMATRIZ_SUCURSAL_IDChanging(int value);
    partial void OnMATRIZ_SUCURSAL_IDChanged();
    partial void OnEMPRESA_IDChanging(int value);
    partial void OnEMPRESA_IDChanged();
    partial void OnSUCURSAL_IDChanging(int value);
    partial void OnSUCURSAL_IDChanged();
    #endregion
		
		public MATRIZ_SUCURSAL()
		{
			this._EMPRESA = default(EntityRef<EMPRESA>);
			this._USUARIO = default(EntityRef<USUARIO>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MATRIZ_SUCURSAL_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MATRIZ_SUCURSAL_ID
		{
			get
			{
				return this._MATRIZ_SUCURSAL_ID;
			}
			set
			{
				if ((this._MATRIZ_SUCURSAL_ID != value))
				{
					this.OnMATRIZ_SUCURSAL_IDChanging(value);
					this.SendPropertyChanging();
					this._MATRIZ_SUCURSAL_ID = value;
					this.SendPropertyChanged("MATRIZ_SUCURSAL_ID");
					this.OnMATRIZ_SUCURSAL_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMPRESA_ID", DbType="Int NOT NULL")]
		public int EMPRESA_ID
		{
			get
			{
				return this._EMPRESA_ID;
			}
			set
			{
				if ((this._EMPRESA_ID != value))
				{
					if (this._EMPRESA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEMPRESA_IDChanging(value);
					this.SendPropertyChanging();
					this._EMPRESA_ID = value;
					this.SendPropertyChanged("EMPRESA_ID");
					this.OnEMPRESA_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SUCURSAL_ID", DbType="Int NOT NULL")]
		public int SUCURSAL_ID
		{
			get
			{
				return this._SUCURSAL_ID;
			}
			set
			{
				if ((this._SUCURSAL_ID != value))
				{
					if (this._USUARIO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSUCURSAL_IDChanging(value);
					this.SendPropertyChanging();
					this._SUCURSAL_ID = value;
					this.SendPropertyChanged("SUCURSAL_ID");
					this.OnSUCURSAL_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EMPRESA_MATRIZ_SUCURSAL", Storage="_EMPRESA", ThisKey="EMPRESA_ID", OtherKey="EMPRESA_ID", IsForeignKey=true)]
		public EMPRESA EMPRESA
		{
			get
			{
				return this._EMPRESA.Entity;
			}
			set
			{
				EMPRESA previousValue = this._EMPRESA.Entity;
				if (((previousValue != value) 
							|| (this._EMPRESA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EMPRESA.Entity = null;
						previousValue.MATRIZ_SUCURSALs.Remove(this);
					}
					this._EMPRESA.Entity = value;
					if ((value != null))
					{
						value.MATRIZ_SUCURSALs.Add(this);
						this._EMPRESA_ID = value.EMPRESA_ID;
					}
					else
					{
						this._EMPRESA_ID = default(int);
					}
					this.SendPropertyChanged("EMPRESA");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="USUARIO_MATRIZ_SUCURSAL", Storage="_USUARIO", ThisKey="SUCURSAL_ID", OtherKey="USUARIO_ID", IsForeignKey=true)]
		public USUARIO USUARIO
		{
			get
			{
				return this._USUARIO.Entity;
			}
			set
			{
				USUARIO previousValue = this._USUARIO.Entity;
				if (((previousValue != value) 
							|| (this._USUARIO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._USUARIO.Entity = null;
						previousValue.MATRIZ_SUCURSALs.Remove(this);
					}
					this._USUARIO.Entity = value;
					if ((value != null))
					{
						value.MATRIZ_SUCURSALs.Add(this);
						this._SUCURSAL_ID = value.USUARIO_ID;
					}
					else
					{
						this._SUCURSAL_ID = default(int);
					}
					this.SendPropertyChanged("USUARIO");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MONEDA")]
	public partial class MONEDA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MONEDA_ID;
		
		private string _NOMBRE;
		
		private System.Nullable<double> _VALOR;
		
		private EntitySet<FACTURA> _FACTURAs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMONEDA_IDChanging(int value);
    partial void OnMONEDA_IDChanged();
    partial void OnNOMBREChanging(string value);
    partial void OnNOMBREChanged();
    partial void OnVALORChanging(System.Nullable<double> value);
    partial void OnVALORChanged();
    #endregion
		
		public MONEDA()
		{
			this._FACTURAs = new EntitySet<FACTURA>(new Action<FACTURA>(this.attach_FACTURAs), new Action<FACTURA>(this.detach_FACTURAs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MONEDA_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MONEDA_ID
		{
			get
			{
				return this._MONEDA_ID;
			}
			set
			{
				if ((this._MONEDA_ID != value))
				{
					this.OnMONEDA_IDChanging(value);
					this.SendPropertyChanging();
					this._MONEDA_ID = value;
					this.SendPropertyChanged("MONEDA_ID");
					this.OnMONEDA_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOMBRE", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string NOMBRE
		{
			get
			{
				return this._NOMBRE;
			}
			set
			{
				if ((this._NOMBRE != value))
				{
					this.OnNOMBREChanging(value);
					this.SendPropertyChanging();
					this._NOMBRE = value;
					this.SendPropertyChanged("NOMBRE");
					this.OnNOMBREChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VALOR", DbType="Float")]
		public System.Nullable<double> VALOR
		{
			get
			{
				return this._VALOR;
			}
			set
			{
				if ((this._VALOR != value))
				{
					this.OnVALORChanging(value);
					this.SendPropertyChanging();
					this._VALOR = value;
					this.SendPropertyChanged("VALOR");
					this.OnVALORChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MONEDA_FACTURA", Storage="_FACTURAs", ThisKey="MONEDA_ID", OtherKey="MONEDA_ID")]
		public EntitySet<FACTURA> FACTURAs
		{
			get
			{
				return this._FACTURAs;
			}
			set
			{
				this._FACTURAs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FACTURAs(FACTURA entity)
		{
			this.SendPropertyChanging();
			entity.MONEDA = this;
		}
		
		private void detach_FACTURAs(FACTURA entity)
		{
			this.SendPropertyChanging();
			entity.MONEDA = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PRODUCTO")]
	public partial class PRODUCTO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PRODUCTO_ID;
		
		private string _NOMBRE;
		
		private int _CATEGORIA_ID;
		
		private string _DESCRIPCION;
		
		private double _CANTIDAD;
		
		private double _PRECIO_COMPRA;
		
		private double _PRECIO_VENTA;
		
		private System.Nullable<int> _UNIDAD_ID;
		
		private EntitySet<FACTURA_PRODUCTO> _FACTURA_PRODUCTOs;
		
		private EntitySet<IMPUESTOS_PRODUCTO> _IMPUESTOS_PRODUCTOs;
		
		private EntitySet<PRODUCTO_USUARIO> _PRODUCTO_USUARIOs;
		
		private EntityRef<CATEGORIA> _CATEGORIA;
		
		private EntityRef<UNIDADES_MEDIDA> _UNIDADES_MEDIDA;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPRODUCTO_IDChanging(int value);
    partial void OnPRODUCTO_IDChanged();
    partial void OnNOMBREChanging(string value);
    partial void OnNOMBREChanged();
    partial void OnCATEGORIA_IDChanging(int value);
    partial void OnCATEGORIA_IDChanged();
    partial void OnDESCRIPCIONChanging(string value);
    partial void OnDESCRIPCIONChanged();
    partial void OnCANTIDADChanging(double value);
    partial void OnCANTIDADChanged();
    partial void OnPRECIO_COMPRAChanging(double value);
    partial void OnPRECIO_COMPRAChanged();
    partial void OnPRECIO_VENTAChanging(double value);
    partial void OnPRECIO_VENTAChanged();
    partial void OnUNIDAD_IDChanging(System.Nullable<int> value);
    partial void OnUNIDAD_IDChanged();
    #endregion
		
		public PRODUCTO()
		{
			this._FACTURA_PRODUCTOs = new EntitySet<FACTURA_PRODUCTO>(new Action<FACTURA_PRODUCTO>(this.attach_FACTURA_PRODUCTOs), new Action<FACTURA_PRODUCTO>(this.detach_FACTURA_PRODUCTOs));
			this._IMPUESTOS_PRODUCTOs = new EntitySet<IMPUESTOS_PRODUCTO>(new Action<IMPUESTOS_PRODUCTO>(this.attach_IMPUESTOS_PRODUCTOs), new Action<IMPUESTOS_PRODUCTO>(this.detach_IMPUESTOS_PRODUCTOs));
			this._PRODUCTO_USUARIOs = new EntitySet<PRODUCTO_USUARIO>(new Action<PRODUCTO_USUARIO>(this.attach_PRODUCTO_USUARIOs), new Action<PRODUCTO_USUARIO>(this.detach_PRODUCTO_USUARIOs));
			this._CATEGORIA = default(EntityRef<CATEGORIA>);
			this._UNIDADES_MEDIDA = default(EntityRef<UNIDADES_MEDIDA>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRODUCTO_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PRODUCTO_ID
		{
			get
			{
				return this._PRODUCTO_ID;
			}
			set
			{
				if ((this._PRODUCTO_ID != value))
				{
					this.OnPRODUCTO_IDChanging(value);
					this.SendPropertyChanging();
					this._PRODUCTO_ID = value;
					this.SendPropertyChanged("PRODUCTO_ID");
					this.OnPRODUCTO_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOMBRE", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string NOMBRE
		{
			get
			{
				return this._NOMBRE;
			}
			set
			{
				if ((this._NOMBRE != value))
				{
					this.OnNOMBREChanging(value);
					this.SendPropertyChanging();
					this._NOMBRE = value;
					this.SendPropertyChanged("NOMBRE");
					this.OnNOMBREChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CATEGORIA_ID", DbType="Int NOT NULL")]
		public int CATEGORIA_ID
		{
			get
			{
				return this._CATEGORIA_ID;
			}
			set
			{
				if ((this._CATEGORIA_ID != value))
				{
					if (this._CATEGORIA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCATEGORIA_IDChanging(value);
					this.SendPropertyChanging();
					this._CATEGORIA_ID = value;
					this.SendPropertyChanged("CATEGORIA_ID");
					this.OnCATEGORIA_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DESCRIPCION", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string DESCRIPCION
		{
			get
			{
				return this._DESCRIPCION;
			}
			set
			{
				if ((this._DESCRIPCION != value))
				{
					this.OnDESCRIPCIONChanging(value);
					this.SendPropertyChanging();
					this._DESCRIPCION = value;
					this.SendPropertyChanged("DESCRIPCION");
					this.OnDESCRIPCIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CANTIDAD", DbType="Float NOT NULL")]
		public double CANTIDAD
		{
			get
			{
				return this._CANTIDAD;
			}
			set
			{
				if ((this._CANTIDAD != value))
				{
					this.OnCANTIDADChanging(value);
					this.SendPropertyChanging();
					this._CANTIDAD = value;
					this.SendPropertyChanged("CANTIDAD");
					this.OnCANTIDADChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRECIO_COMPRA", DbType="Float NOT NULL")]
		public double PRECIO_COMPRA
		{
			get
			{
				return this._PRECIO_COMPRA;
			}
			set
			{
				if ((this._PRECIO_COMPRA != value))
				{
					this.OnPRECIO_COMPRAChanging(value);
					this.SendPropertyChanging();
					this._PRECIO_COMPRA = value;
					this.SendPropertyChanged("PRECIO_COMPRA");
					this.OnPRECIO_COMPRAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRECIO_VENTA", DbType="Float NOT NULL")]
		public double PRECIO_VENTA
		{
			get
			{
				return this._PRECIO_VENTA;
			}
			set
			{
				if ((this._PRECIO_VENTA != value))
				{
					this.OnPRECIO_VENTAChanging(value);
					this.SendPropertyChanging();
					this._PRECIO_VENTA = value;
					this.SendPropertyChanged("PRECIO_VENTA");
					this.OnPRECIO_VENTAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UNIDAD_ID", DbType="Int")]
		public System.Nullable<int> UNIDAD_ID
		{
			get
			{
				return this._UNIDAD_ID;
			}
			set
			{
				if ((this._UNIDAD_ID != value))
				{
					if (this._UNIDADES_MEDIDA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUNIDAD_IDChanging(value);
					this.SendPropertyChanging();
					this._UNIDAD_ID = value;
					this.SendPropertyChanged("UNIDAD_ID");
					this.OnUNIDAD_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PRODUCTO_FACTURA_PRODUCTO", Storage="_FACTURA_PRODUCTOs", ThisKey="PRODUCTO_ID", OtherKey="PRODUCTO_ID")]
		public EntitySet<FACTURA_PRODUCTO> FACTURA_PRODUCTOs
		{
			get
			{
				return this._FACTURA_PRODUCTOs;
			}
			set
			{
				this._FACTURA_PRODUCTOs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PRODUCTO_IMPUESTOS_PRODUCTO", Storage="_IMPUESTOS_PRODUCTOs", ThisKey="PRODUCTO_ID", OtherKey="PRODUCTO_ID")]
		public EntitySet<IMPUESTOS_PRODUCTO> IMPUESTOS_PRODUCTOs
		{
			get
			{
				return this._IMPUESTOS_PRODUCTOs;
			}
			set
			{
				this._IMPUESTOS_PRODUCTOs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PRODUCTO_PRODUCTO_USUARIO", Storage="_PRODUCTO_USUARIOs", ThisKey="PRODUCTO_ID", OtherKey="PRODUCTO_ID")]
		public EntitySet<PRODUCTO_USUARIO> PRODUCTO_USUARIOs
		{
			get
			{
				return this._PRODUCTO_USUARIOs;
			}
			set
			{
				this._PRODUCTO_USUARIOs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CATEGORIA_PRODUCTO", Storage="_CATEGORIA", ThisKey="CATEGORIA_ID", OtherKey="CATEGORIA_ID", IsForeignKey=true)]
		public CATEGORIA CATEGORIA
		{
			get
			{
				return this._CATEGORIA.Entity;
			}
			set
			{
				CATEGORIA previousValue = this._CATEGORIA.Entity;
				if (((previousValue != value) 
							|| (this._CATEGORIA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CATEGORIA.Entity = null;
						previousValue.PRODUCTOs.Remove(this);
					}
					this._CATEGORIA.Entity = value;
					if ((value != null))
					{
						value.PRODUCTOs.Add(this);
						this._CATEGORIA_ID = value.CATEGORIA_ID;
					}
					else
					{
						this._CATEGORIA_ID = default(int);
					}
					this.SendPropertyChanged("CATEGORIA");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UNIDADES_MEDIDA_PRODUCTO", Storage="_UNIDADES_MEDIDA", ThisKey="UNIDAD_ID", OtherKey="UNIDAD_ID", IsForeignKey=true)]
		public UNIDADES_MEDIDA UNIDADES_MEDIDA
		{
			get
			{
				return this._UNIDADES_MEDIDA.Entity;
			}
			set
			{
				UNIDADES_MEDIDA previousValue = this._UNIDADES_MEDIDA.Entity;
				if (((previousValue != value) 
							|| (this._UNIDADES_MEDIDA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UNIDADES_MEDIDA.Entity = null;
						previousValue.PRODUCTOs.Remove(this);
					}
					this._UNIDADES_MEDIDA.Entity = value;
					if ((value != null))
					{
						value.PRODUCTOs.Add(this);
						this._UNIDAD_ID = value.UNIDAD_ID;
					}
					else
					{
						this._UNIDAD_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("UNIDADES_MEDIDA");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FACTURA_PRODUCTOs(FACTURA_PRODUCTO entity)
		{
			this.SendPropertyChanging();
			entity.PRODUCTO = this;
		}
		
		private void detach_FACTURA_PRODUCTOs(FACTURA_PRODUCTO entity)
		{
			this.SendPropertyChanging();
			entity.PRODUCTO = null;
		}
		
		private void attach_IMPUESTOS_PRODUCTOs(IMPUESTOS_PRODUCTO entity)
		{
			this.SendPropertyChanging();
			entity.PRODUCTO = this;
		}
		
		private void detach_IMPUESTOS_PRODUCTOs(IMPUESTOS_PRODUCTO entity)
		{
			this.SendPropertyChanging();
			entity.PRODUCTO = null;
		}
		
		private void attach_PRODUCTO_USUARIOs(PRODUCTO_USUARIO entity)
		{
			this.SendPropertyChanging();
			entity.PRODUCTO = this;
		}
		
		private void detach_PRODUCTO_USUARIOs(PRODUCTO_USUARIO entity)
		{
			this.SendPropertyChanging();
			entity.PRODUCTO = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PRODUCTO_USUARIO")]
	public partial class PRODUCTO_USUARIO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PRODUCTO_USUARIO_ID;
		
		private System.Nullable<int> _PRODUCTO_ID;
		
		private System.Nullable<int> _USUARIO_ID;
		
		private System.Nullable<double> _ULTIMO_PRECIO;
		
		private System.Nullable<System.DateTime> _FECHA;
		
		private EntityRef<PRODUCTO> _PRODUCTO;
		
		private EntityRef<USUARIO> _USUARIO;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPRODUCTO_USUARIO_IDChanging(int value);
    partial void OnPRODUCTO_USUARIO_IDChanged();
    partial void OnPRODUCTO_IDChanging(System.Nullable<int> value);
    partial void OnPRODUCTO_IDChanged();
    partial void OnUSUARIO_IDChanging(System.Nullable<int> value);
    partial void OnUSUARIO_IDChanged();
    partial void OnULTIMO_PRECIOChanging(System.Nullable<double> value);
    partial void OnULTIMO_PRECIOChanged();
    partial void OnFECHAChanging(System.Nullable<System.DateTime> value);
    partial void OnFECHAChanged();
    #endregion
		
		public PRODUCTO_USUARIO()
		{
			this._PRODUCTO = default(EntityRef<PRODUCTO>);
			this._USUARIO = default(EntityRef<USUARIO>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRODUCTO_USUARIO_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PRODUCTO_USUARIO_ID
		{
			get
			{
				return this._PRODUCTO_USUARIO_ID;
			}
			set
			{
				if ((this._PRODUCTO_USUARIO_ID != value))
				{
					this.OnPRODUCTO_USUARIO_IDChanging(value);
					this.SendPropertyChanging();
					this._PRODUCTO_USUARIO_ID = value;
					this.SendPropertyChanged("PRODUCTO_USUARIO_ID");
					this.OnPRODUCTO_USUARIO_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRODUCTO_ID", DbType="Int")]
		public System.Nullable<int> PRODUCTO_ID
		{
			get
			{
				return this._PRODUCTO_ID;
			}
			set
			{
				if ((this._PRODUCTO_ID != value))
				{
					if (this._PRODUCTO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPRODUCTO_IDChanging(value);
					this.SendPropertyChanging();
					this._PRODUCTO_ID = value;
					this.SendPropertyChanged("PRODUCTO_ID");
					this.OnPRODUCTO_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USUARIO_ID", DbType="Int")]
		public System.Nullable<int> USUARIO_ID
		{
			get
			{
				return this._USUARIO_ID;
			}
			set
			{
				if ((this._USUARIO_ID != value))
				{
					if (this._USUARIO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUSUARIO_IDChanging(value);
					this.SendPropertyChanging();
					this._USUARIO_ID = value;
					this.SendPropertyChanged("USUARIO_ID");
					this.OnUSUARIO_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ULTIMO_PRECIO", DbType="Float")]
		public System.Nullable<double> ULTIMO_PRECIO
		{
			get
			{
				return this._ULTIMO_PRECIO;
			}
			set
			{
				if ((this._ULTIMO_PRECIO != value))
				{
					this.OnULTIMO_PRECIOChanging(value);
					this.SendPropertyChanging();
					this._ULTIMO_PRECIO = value;
					this.SendPropertyChanged("ULTIMO_PRECIO");
					this.OnULTIMO_PRECIOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FECHA", DbType="DateTime")]
		public System.Nullable<System.DateTime> FECHA
		{
			get
			{
				return this._FECHA;
			}
			set
			{
				if ((this._FECHA != value))
				{
					this.OnFECHAChanging(value);
					this.SendPropertyChanging();
					this._FECHA = value;
					this.SendPropertyChanged("FECHA");
					this.OnFECHAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PRODUCTO_PRODUCTO_USUARIO", Storage="_PRODUCTO", ThisKey="PRODUCTO_ID", OtherKey="PRODUCTO_ID", IsForeignKey=true)]
		public PRODUCTO PRODUCTO
		{
			get
			{
				return this._PRODUCTO.Entity;
			}
			set
			{
				PRODUCTO previousValue = this._PRODUCTO.Entity;
				if (((previousValue != value) 
							|| (this._PRODUCTO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PRODUCTO.Entity = null;
						previousValue.PRODUCTO_USUARIOs.Remove(this);
					}
					this._PRODUCTO.Entity = value;
					if ((value != null))
					{
						value.PRODUCTO_USUARIOs.Add(this);
						this._PRODUCTO_ID = value.PRODUCTO_ID;
					}
					else
					{
						this._PRODUCTO_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("PRODUCTO");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="USUARIO_PRODUCTO_USUARIO", Storage="_USUARIO", ThisKey="USUARIO_ID", OtherKey="USUARIO_ID", IsForeignKey=true)]
		public USUARIO USUARIO
		{
			get
			{
				return this._USUARIO.Entity;
			}
			set
			{
				USUARIO previousValue = this._USUARIO.Entity;
				if (((previousValue != value) 
							|| (this._USUARIO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._USUARIO.Entity = null;
						previousValue.PRODUCTO_USUARIOs.Remove(this);
					}
					this._USUARIO.Entity = value;
					if ((value != null))
					{
						value.PRODUCTO_USUARIOs.Add(this);
						this._USUARIO_ID = value.USUARIO_ID;
					}
					else
					{
						this._USUARIO_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("USUARIO");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PROVEEDOR")]
	public partial class PROVEEDOR : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PROVEEDORES_ID;
		
		private System.Nullable<int> _USUARIO_ID;
		
		private EntityRef<USUARIO> _USUARIO;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPROVEEDORES_IDChanging(int value);
    partial void OnPROVEEDORES_IDChanged();
    partial void OnUSUARIO_IDChanging(System.Nullable<int> value);
    partial void OnUSUARIO_IDChanged();
    #endregion
		
		public PROVEEDOR()
		{
			this._USUARIO = default(EntityRef<USUARIO>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PROVEEDORES_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PROVEEDORES_ID
		{
			get
			{
				return this._PROVEEDORES_ID;
			}
			set
			{
				if ((this._PROVEEDORES_ID != value))
				{
					this.OnPROVEEDORES_IDChanging(value);
					this.SendPropertyChanging();
					this._PROVEEDORES_ID = value;
					this.SendPropertyChanged("PROVEEDORES_ID");
					this.OnPROVEEDORES_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USUARIO_ID", DbType="Int")]
		public System.Nullable<int> USUARIO_ID
		{
			get
			{
				return this._USUARIO_ID;
			}
			set
			{
				if ((this._USUARIO_ID != value))
				{
					if (this._USUARIO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUSUARIO_IDChanging(value);
					this.SendPropertyChanging();
					this._USUARIO_ID = value;
					this.SendPropertyChanged("USUARIO_ID");
					this.OnUSUARIO_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="USUARIO_PROVEEDOR", Storage="_USUARIO", ThisKey="USUARIO_ID", OtherKey="USUARIO_ID", IsForeignKey=true)]
		public USUARIO USUARIO
		{
			get
			{
				return this._USUARIO.Entity;
			}
			set
			{
				USUARIO previousValue = this._USUARIO.Entity;
				if (((previousValue != value) 
							|| (this._USUARIO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._USUARIO.Entity = null;
						previousValue.PROVEEDORs.Remove(this);
					}
					this._USUARIO.Entity = value;
					if ((value != null))
					{
						value.PROVEEDORs.Add(this);
						this._USUARIO_ID = value.USUARIO_ID;
					}
					else
					{
						this._USUARIO_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("USUARIO");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TIPO_PAGO")]
	public partial class TIPO_PAGO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TIPO_PAGO_ID;
		
		private string _NOMBRE;
		
		private EntitySet<FACTURA> _FACTURAs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTIPO_PAGO_IDChanging(int value);
    partial void OnTIPO_PAGO_IDChanged();
    partial void OnNOMBREChanging(string value);
    partial void OnNOMBREChanged();
    #endregion
		
		public TIPO_PAGO()
		{
			this._FACTURAs = new EntitySet<FACTURA>(new Action<FACTURA>(this.attach_FACTURAs), new Action<FACTURA>(this.detach_FACTURAs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TIPO_PAGO_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TIPO_PAGO_ID
		{
			get
			{
				return this._TIPO_PAGO_ID;
			}
			set
			{
				if ((this._TIPO_PAGO_ID != value))
				{
					this.OnTIPO_PAGO_IDChanging(value);
					this.SendPropertyChanging();
					this._TIPO_PAGO_ID = value;
					this.SendPropertyChanged("TIPO_PAGO_ID");
					this.OnTIPO_PAGO_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOMBRE", DbType="NVarChar(50)")]
		public string NOMBRE
		{
			get
			{
				return this._NOMBRE;
			}
			set
			{
				if ((this._NOMBRE != value))
				{
					this.OnNOMBREChanging(value);
					this.SendPropertyChanging();
					this._NOMBRE = value;
					this.SendPropertyChanged("NOMBRE");
					this.OnNOMBREChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TIPO_PAGO_FACTURA", Storage="_FACTURAs", ThisKey="TIPO_PAGO_ID", OtherKey="TIPO_PAGO_ID")]
		public EntitySet<FACTURA> FACTURAs
		{
			get
			{
				return this._FACTURAs;
			}
			set
			{
				this._FACTURAs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FACTURAs(FACTURA entity)
		{
			this.SendPropertyChanging();
			entity.TIPO_PAGO = this;
		}
		
		private void detach_FACTURAs(FACTURA entity)
		{
			this.SendPropertyChanging();
			entity.TIPO_PAGO = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TIPO_USUARIO")]
	public partial class TIPO_USUARIO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TIPO_ID;
		
		private string _NOMBRE;
		
		private string _DESCRIPCION;
		
		private EntitySet<USUARIO> _USUARIOs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTIPO_IDChanging(int value);
    partial void OnTIPO_IDChanged();
    partial void OnNOMBREChanging(string value);
    partial void OnNOMBREChanged();
    partial void OnDESCRIPCIONChanging(string value);
    partial void OnDESCRIPCIONChanged();
    #endregion
		
		public TIPO_USUARIO()
		{
			this._USUARIOs = new EntitySet<USUARIO>(new Action<USUARIO>(this.attach_USUARIOs), new Action<USUARIO>(this.detach_USUARIOs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TIPO_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TIPO_ID
		{
			get
			{
				return this._TIPO_ID;
			}
			set
			{
				if ((this._TIPO_ID != value))
				{
					this.OnTIPO_IDChanging(value);
					this.SendPropertyChanging();
					this._TIPO_ID = value;
					this.SendPropertyChanged("TIPO_ID");
					this.OnTIPO_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOMBRE", DbType="NVarChar(50)")]
		public string NOMBRE
		{
			get
			{
				return this._NOMBRE;
			}
			set
			{
				if ((this._NOMBRE != value))
				{
					this.OnNOMBREChanging(value);
					this.SendPropertyChanging();
					this._NOMBRE = value;
					this.SendPropertyChanged("NOMBRE");
					this.OnNOMBREChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DESCRIPCION", DbType="NVarChar(250)")]
		public string DESCRIPCION
		{
			get
			{
				return this._DESCRIPCION;
			}
			set
			{
				if ((this._DESCRIPCION != value))
				{
					this.OnDESCRIPCIONChanging(value);
					this.SendPropertyChanging();
					this._DESCRIPCION = value;
					this.SendPropertyChanged("DESCRIPCION");
					this.OnDESCRIPCIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TIPO_USUARIO_USUARIO", Storage="_USUARIOs", ThisKey="TIPO_ID", OtherKey="TIPO_ID")]
		public EntitySet<USUARIO> USUARIOs
		{
			get
			{
				return this._USUARIOs;
			}
			set
			{
				this._USUARIOs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_USUARIOs(USUARIO entity)
		{
			this.SendPropertyChanging();
			entity.TIPO_USUARIO = this;
		}
		
		private void detach_USUARIOs(USUARIO entity)
		{
			this.SendPropertyChanging();
			entity.TIPO_USUARIO = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UNIDADES_MEDIDA")]
	public partial class UNIDADES_MEDIDA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UNIDAD_ID;
		
		private string _NOMBRE;
		
		private string _DESCRIPCION;
		
		private EntitySet<PRODUCTO> _PRODUCTOs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUNIDAD_IDChanging(int value);
    partial void OnUNIDAD_IDChanged();
    partial void OnNOMBREChanging(string value);
    partial void OnNOMBREChanged();
    partial void OnDESCRIPCIONChanging(string value);
    partial void OnDESCRIPCIONChanged();
    #endregion
		
		public UNIDADES_MEDIDA()
		{
			this._PRODUCTOs = new EntitySet<PRODUCTO>(new Action<PRODUCTO>(this.attach_PRODUCTOs), new Action<PRODUCTO>(this.detach_PRODUCTOs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UNIDAD_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UNIDAD_ID
		{
			get
			{
				return this._UNIDAD_ID;
			}
			set
			{
				if ((this._UNIDAD_ID != value))
				{
					this.OnUNIDAD_IDChanging(value);
					this.SendPropertyChanging();
					this._UNIDAD_ID = value;
					this.SendPropertyChanged("UNIDAD_ID");
					this.OnUNIDAD_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOMBRE", DbType="NVarChar(50)")]
		public string NOMBRE
		{
			get
			{
				return this._NOMBRE;
			}
			set
			{
				if ((this._NOMBRE != value))
				{
					this.OnNOMBREChanging(value);
					this.SendPropertyChanging();
					this._NOMBRE = value;
					this.SendPropertyChanged("NOMBRE");
					this.OnNOMBREChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DESCRIPCION", DbType="NVarChar(250)")]
		public string DESCRIPCION
		{
			get
			{
				return this._DESCRIPCION;
			}
			set
			{
				if ((this._DESCRIPCION != value))
				{
					this.OnDESCRIPCIONChanging(value);
					this.SendPropertyChanging();
					this._DESCRIPCION = value;
					this.SendPropertyChanged("DESCRIPCION");
					this.OnDESCRIPCIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UNIDADES_MEDIDA_PRODUCTO", Storage="_PRODUCTOs", ThisKey="UNIDAD_ID", OtherKey="UNIDAD_ID")]
		public EntitySet<PRODUCTO> PRODUCTOs
		{
			get
			{
				return this._PRODUCTOs;
			}
			set
			{
				this._PRODUCTOs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PRODUCTOs(PRODUCTO entity)
		{
			this.SendPropertyChanging();
			entity.UNIDADES_MEDIDA = this;
		}
		
		private void detach_PRODUCTOs(PRODUCTO entity)
		{
			this.SendPropertyChanging();
			entity.UNIDADES_MEDIDA = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.USUARIO")]
	public partial class USUARIO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _USUARIO_ID;
		
		private string _FOTO;
		
		private string _USERNAME;
		
		private string _PASSWORD;
		
		private string _NOMBRE;
		
		private string _APELLIDO_MATERNO;
		
		private string _APELLIDO_PATERNO;
		
		private string _ALIAS;
		
		private string _CARGO;
		
		private string _EMPRESA;
		
		private string _SKYPE;
		
		private string _MSN;
		
		private string _TELEFONO_PERSONAL;
		
		private string _CELULAR;
		
		private string _RADIO;
		
		private string _CALLE;
		
		private string _NUM_EXTERNO;
		
		private string _NUM_INTERNO;
		
		private string _CODIGO_POSTAL;
		
		private string _COLONIA;
		
		private string _LOCALIDAD;
		
		private string _MUNICIPIO;
		
		private string _ESTADO;
		
		private string _PAIS;
		
		private System.Nullable<System.DateTime> _FECHA_NACIMIENTO;
		
		private System.Nullable<int> _EDAD;
		
		private string _GENERO;
		
		private string _ZONA;
		
		private string _NUMERO_PLACAS;
		
		private string _CLAVE_SICE;
		
		private string _CLAVE_PEMEX;
		
		private System.Nullable<int> _TIPO_ID;
		
		private int _DATOS_FISCALES_ID;
		
		private EntitySet<EMPLEADO> _EMPLEADOs;
		
		private EntitySet<EMPRESA> _EMPRESAs;
		
		private EntitySet<EMPRESA_EMPLEADO> _EMPRESA_EMPLEADOs;
		
		private EntitySet<FACTURA> _FACTURAs;
		
		private EntitySet<MATRIZ_SUCURSAL> _MATRIZ_SUCURSALs;
		
		private EntitySet<PRODUCTO_USUARIO> _PRODUCTO_USUARIOs;
		
		private EntitySet<PROVEEDOR> _PROVEEDORs;
		
		private EntityRef<DATO_FISCAL> _DATO_FISCAL;
		
		private EntityRef<TIPO_USUARIO> _TIPO_USUARIO;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUSUARIO_IDChanging(int value);
    partial void OnUSUARIO_IDChanged();
    partial void OnFOTOChanging(string value);
    partial void OnFOTOChanged();
    partial void OnUSERNAMEChanging(string value);
    partial void OnUSERNAMEChanged();
    partial void OnPASSWORDChanging(string value);
    partial void OnPASSWORDChanged();
    partial void OnNOMBREChanging(string value);
    partial void OnNOMBREChanged();
    partial void OnAPELLIDO_MATERNOChanging(string value);
    partial void OnAPELLIDO_MATERNOChanged();
    partial void OnAPELLIDO_PATERNOChanging(string value);
    partial void OnAPELLIDO_PATERNOChanged();
    partial void OnALIASChanging(string value);
    partial void OnALIASChanged();
    partial void OnCARGOChanging(string value);
    partial void OnCARGOChanged();
    partial void OnEMPRESAChanging(string value);
    partial void OnEMPRESAChanged();
    partial void OnSKYPEChanging(string value);
    partial void OnSKYPEChanged();
    partial void OnMSNChanging(string value);
    partial void OnMSNChanged();
    partial void OnTELEFONO_PERSONALChanging(string value);
    partial void OnTELEFONO_PERSONALChanged();
    partial void OnCELULARChanging(string value);
    partial void OnCELULARChanged();
    partial void OnRADIOChanging(string value);
    partial void OnRADIOChanged();
    partial void OnCALLEChanging(string value);
    partial void OnCALLEChanged();
    partial void OnNUM_EXTERNOChanging(string value);
    partial void OnNUM_EXTERNOChanged();
    partial void OnNUM_INTERNOChanging(string value);
    partial void OnNUM_INTERNOChanged();
    partial void OnCODIGO_POSTALChanging(string value);
    partial void OnCODIGO_POSTALChanged();
    partial void OnCOLONIAChanging(string value);
    partial void OnCOLONIAChanged();
    partial void OnLOCALIDADChanging(string value);
    partial void OnLOCALIDADChanged();
    partial void OnMUNICIPIOChanging(string value);
    partial void OnMUNICIPIOChanged();
    partial void OnESTADOChanging(string value);
    partial void OnESTADOChanged();
    partial void OnPAISChanging(string value);
    partial void OnPAISChanged();
    partial void OnFECHA_NACIMIENTOChanging(System.Nullable<System.DateTime> value);
    partial void OnFECHA_NACIMIENTOChanged();
    partial void OnEDADChanging(System.Nullable<int> value);
    partial void OnEDADChanged();
    partial void OnGENEROChanging(string value);
    partial void OnGENEROChanged();
    partial void OnZONAChanging(string value);
    partial void OnZONAChanged();
    partial void OnNUMERO_PLACASChanging(string value);
    partial void OnNUMERO_PLACASChanged();
    partial void OnCLAVE_SICEChanging(string value);
    partial void OnCLAVE_SICEChanged();
    partial void OnCLAVE_PEMEXChanging(string value);
    partial void OnCLAVE_PEMEXChanged();
    partial void OnTIPO_IDChanging(System.Nullable<int> value);
    partial void OnTIPO_IDChanged();
    partial void OnDATOS_FISCALES_IDChanging(int value);
    partial void OnDATOS_FISCALES_IDChanged();
    #endregion
		
		public USUARIO()
		{
			this._EMPLEADOs = new EntitySet<EMPLEADO>(new Action<EMPLEADO>(this.attach_EMPLEADOs), new Action<EMPLEADO>(this.detach_EMPLEADOs));
			this._EMPRESAs = new EntitySet<EMPRESA>(new Action<EMPRESA>(this.attach_EMPRESAs), new Action<EMPRESA>(this.detach_EMPRESAs));
			this._EMPRESA_EMPLEADOs = new EntitySet<EMPRESA_EMPLEADO>(new Action<EMPRESA_EMPLEADO>(this.attach_EMPRESA_EMPLEADOs), new Action<EMPRESA_EMPLEADO>(this.detach_EMPRESA_EMPLEADOs));
			this._FACTURAs = new EntitySet<FACTURA>(new Action<FACTURA>(this.attach_FACTURAs), new Action<FACTURA>(this.detach_FACTURAs));
			this._MATRIZ_SUCURSALs = new EntitySet<MATRIZ_SUCURSAL>(new Action<MATRIZ_SUCURSAL>(this.attach_MATRIZ_SUCURSALs), new Action<MATRIZ_SUCURSAL>(this.detach_MATRIZ_SUCURSALs));
			this._PRODUCTO_USUARIOs = new EntitySet<PRODUCTO_USUARIO>(new Action<PRODUCTO_USUARIO>(this.attach_PRODUCTO_USUARIOs), new Action<PRODUCTO_USUARIO>(this.detach_PRODUCTO_USUARIOs));
			this._PROVEEDORs = new EntitySet<PROVEEDOR>(new Action<PROVEEDOR>(this.attach_PROVEEDORs), new Action<PROVEEDOR>(this.detach_PROVEEDORs));
			this._DATO_FISCAL = default(EntityRef<DATO_FISCAL>);
			this._TIPO_USUARIO = default(EntityRef<TIPO_USUARIO>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USUARIO_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int USUARIO_ID
		{
			get
			{
				return this._USUARIO_ID;
			}
			set
			{
				if ((this._USUARIO_ID != value))
				{
					this.OnUSUARIO_IDChanging(value);
					this.SendPropertyChanging();
					this._USUARIO_ID = value;
					this.SendPropertyChanged("USUARIO_ID");
					this.OnUSUARIO_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FOTO", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string FOTO
		{
			get
			{
				return this._FOTO;
			}
			set
			{
				if ((this._FOTO != value))
				{
					this.OnFOTOChanging(value);
					this.SendPropertyChanging();
					this._FOTO = value;
					this.SendPropertyChanged("FOTO");
					this.OnFOTOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USERNAME", DbType="NVarChar(16)")]
		public string USERNAME
		{
			get
			{
				return this._USERNAME;
			}
			set
			{
				if ((this._USERNAME != value))
				{
					this.OnUSERNAMEChanging(value);
					this.SendPropertyChanging();
					this._USERNAME = value;
					this.SendPropertyChanged("USERNAME");
					this.OnUSERNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PASSWORD", DbType="NVarChar(50)")]
		public string PASSWORD
		{
			get
			{
				return this._PASSWORD;
			}
			set
			{
				if ((this._PASSWORD != value))
				{
					this.OnPASSWORDChanging(value);
					this.SendPropertyChanging();
					this._PASSWORD = value;
					this.SendPropertyChanged("PASSWORD");
					this.OnPASSWORDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOMBRE", DbType="NVarChar(50)")]
		public string NOMBRE
		{
			get
			{
				return this._NOMBRE;
			}
			set
			{
				if ((this._NOMBRE != value))
				{
					this.OnNOMBREChanging(value);
					this.SendPropertyChanging();
					this._NOMBRE = value;
					this.SendPropertyChanged("NOMBRE");
					this.OnNOMBREChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_APELLIDO_MATERNO", DbType="NVarChar(50)")]
		public string APELLIDO_MATERNO
		{
			get
			{
				return this._APELLIDO_MATERNO;
			}
			set
			{
				if ((this._APELLIDO_MATERNO != value))
				{
					this.OnAPELLIDO_MATERNOChanging(value);
					this.SendPropertyChanging();
					this._APELLIDO_MATERNO = value;
					this.SendPropertyChanged("APELLIDO_MATERNO");
					this.OnAPELLIDO_MATERNOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_APELLIDO_PATERNO", DbType="NVarChar(50)")]
		public string APELLIDO_PATERNO
		{
			get
			{
				return this._APELLIDO_PATERNO;
			}
			set
			{
				if ((this._APELLIDO_PATERNO != value))
				{
					this.OnAPELLIDO_PATERNOChanging(value);
					this.SendPropertyChanging();
					this._APELLIDO_PATERNO = value;
					this.SendPropertyChanged("APELLIDO_PATERNO");
					this.OnAPELLIDO_PATERNOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ALIAS", DbType="NVarChar(50)")]
		public string ALIAS
		{
			get
			{
				return this._ALIAS;
			}
			set
			{
				if ((this._ALIAS != value))
				{
					this.OnALIASChanging(value);
					this.SendPropertyChanging();
					this._ALIAS = value;
					this.SendPropertyChanged("ALIAS");
					this.OnALIASChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CARGO", DbType="NVarChar(50)")]
		public string CARGO
		{
			get
			{
				return this._CARGO;
			}
			set
			{
				if ((this._CARGO != value))
				{
					this.OnCARGOChanging(value);
					this.SendPropertyChanging();
					this._CARGO = value;
					this.SendPropertyChanged("CARGO");
					this.OnCARGOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMPRESA", DbType="NVarChar(50)")]
		public string EMPRESA
		{
			get
			{
				return this._EMPRESA;
			}
			set
			{
				if ((this._EMPRESA != value))
				{
					this.OnEMPRESAChanging(value);
					this.SendPropertyChanging();
					this._EMPRESA = value;
					this.SendPropertyChanged("EMPRESA");
					this.OnEMPRESAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SKYPE", DbType="NVarChar(50)")]
		public string SKYPE
		{
			get
			{
				return this._SKYPE;
			}
			set
			{
				if ((this._SKYPE != value))
				{
					this.OnSKYPEChanging(value);
					this.SendPropertyChanging();
					this._SKYPE = value;
					this.SendPropertyChanged("SKYPE");
					this.OnSKYPEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MSN", DbType="NVarChar(50)")]
		public string MSN
		{
			get
			{
				return this._MSN;
			}
			set
			{
				if ((this._MSN != value))
				{
					this.OnMSNChanging(value);
					this.SendPropertyChanging();
					this._MSN = value;
					this.SendPropertyChanged("MSN");
					this.OnMSNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TELEFONO_PERSONAL", DbType="NVarChar(15)")]
		public string TELEFONO_PERSONAL
		{
			get
			{
				return this._TELEFONO_PERSONAL;
			}
			set
			{
				if ((this._TELEFONO_PERSONAL != value))
				{
					this.OnTELEFONO_PERSONALChanging(value);
					this.SendPropertyChanging();
					this._TELEFONO_PERSONAL = value;
					this.SendPropertyChanged("TELEFONO_PERSONAL");
					this.OnTELEFONO_PERSONALChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CELULAR", DbType="NVarChar(15)")]
		public string CELULAR
		{
			get
			{
				return this._CELULAR;
			}
			set
			{
				if ((this._CELULAR != value))
				{
					this.OnCELULARChanging(value);
					this.SendPropertyChanging();
					this._CELULAR = value;
					this.SendPropertyChanged("CELULAR");
					this.OnCELULARChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RADIO", DbType="NVarChar(20)")]
		public string RADIO
		{
			get
			{
				return this._RADIO;
			}
			set
			{
				if ((this._RADIO != value))
				{
					this.OnRADIOChanging(value);
					this.SendPropertyChanging();
					this._RADIO = value;
					this.SendPropertyChanged("RADIO");
					this.OnRADIOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CALLE", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CALLE
		{
			get
			{
				return this._CALLE;
			}
			set
			{
				if ((this._CALLE != value))
				{
					this.OnCALLEChanging(value);
					this.SendPropertyChanging();
					this._CALLE = value;
					this.SendPropertyChanged("CALLE");
					this.OnCALLEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NUM_EXTERNO", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string NUM_EXTERNO
		{
			get
			{
				return this._NUM_EXTERNO;
			}
			set
			{
				if ((this._NUM_EXTERNO != value))
				{
					this.OnNUM_EXTERNOChanging(value);
					this.SendPropertyChanging();
					this._NUM_EXTERNO = value;
					this.SendPropertyChanged("NUM_EXTERNO");
					this.OnNUM_EXTERNOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NUM_INTERNO", DbType="NVarChar(20)")]
		public string NUM_INTERNO
		{
			get
			{
				return this._NUM_INTERNO;
			}
			set
			{
				if ((this._NUM_INTERNO != value))
				{
					this.OnNUM_INTERNOChanging(value);
					this.SendPropertyChanging();
					this._NUM_INTERNO = value;
					this.SendPropertyChanged("NUM_INTERNO");
					this.OnNUM_INTERNOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CODIGO_POSTAL", DbType="NVarChar(6) NOT NULL", CanBeNull=false)]
		public string CODIGO_POSTAL
		{
			get
			{
				return this._CODIGO_POSTAL;
			}
			set
			{
				if ((this._CODIGO_POSTAL != value))
				{
					this.OnCODIGO_POSTALChanging(value);
					this.SendPropertyChanging();
					this._CODIGO_POSTAL = value;
					this.SendPropertyChanged("CODIGO_POSTAL");
					this.OnCODIGO_POSTALChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COLONIA", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string COLONIA
		{
			get
			{
				return this._COLONIA;
			}
			set
			{
				if ((this._COLONIA != value))
				{
					this.OnCOLONIAChanging(value);
					this.SendPropertyChanging();
					this._COLONIA = value;
					this.SendPropertyChanged("COLONIA");
					this.OnCOLONIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LOCALIDAD", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string LOCALIDAD
		{
			get
			{
				return this._LOCALIDAD;
			}
			set
			{
				if ((this._LOCALIDAD != value))
				{
					this.OnLOCALIDADChanging(value);
					this.SendPropertyChanging();
					this._LOCALIDAD = value;
					this.SendPropertyChanged("LOCALIDAD");
					this.OnLOCALIDADChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MUNICIPIO", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string MUNICIPIO
		{
			get
			{
				return this._MUNICIPIO;
			}
			set
			{
				if ((this._MUNICIPIO != value))
				{
					this.OnMUNICIPIOChanging(value);
					this.SendPropertyChanging();
					this._MUNICIPIO = value;
					this.SendPropertyChanged("MUNICIPIO");
					this.OnMUNICIPIOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ESTADO", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ESTADO
		{
			get
			{
				return this._ESTADO;
			}
			set
			{
				if ((this._ESTADO != value))
				{
					this.OnESTADOChanging(value);
					this.SendPropertyChanging();
					this._ESTADO = value;
					this.SendPropertyChanged("ESTADO");
					this.OnESTADOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PAIS", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PAIS
		{
			get
			{
				return this._PAIS;
			}
			set
			{
				if ((this._PAIS != value))
				{
					this.OnPAISChanging(value);
					this.SendPropertyChanging();
					this._PAIS = value;
					this.SendPropertyChanged("PAIS");
					this.OnPAISChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FECHA_NACIMIENTO", DbType="DateTime")]
		public System.Nullable<System.DateTime> FECHA_NACIMIENTO
		{
			get
			{
				return this._FECHA_NACIMIENTO;
			}
			set
			{
				if ((this._FECHA_NACIMIENTO != value))
				{
					this.OnFECHA_NACIMIENTOChanging(value);
					this.SendPropertyChanging();
					this._FECHA_NACIMIENTO = value;
					this.SendPropertyChanged("FECHA_NACIMIENTO");
					this.OnFECHA_NACIMIENTOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EDAD", DbType="Int")]
		public System.Nullable<int> EDAD
		{
			get
			{
				return this._EDAD;
			}
			set
			{
				if ((this._EDAD != value))
				{
					this.OnEDADChanging(value);
					this.SendPropertyChanging();
					this._EDAD = value;
					this.SendPropertyChanged("EDAD");
					this.OnEDADChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GENERO", DbType="NVarChar(10)")]
		public string GENERO
		{
			get
			{
				return this._GENERO;
			}
			set
			{
				if ((this._GENERO != value))
				{
					this.OnGENEROChanging(value);
					this.SendPropertyChanging();
					this._GENERO = value;
					this.SendPropertyChanged("GENERO");
					this.OnGENEROChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZONA", DbType="NVarChar(50)")]
		public string ZONA
		{
			get
			{
				return this._ZONA;
			}
			set
			{
				if ((this._ZONA != value))
				{
					this.OnZONAChanging(value);
					this.SendPropertyChanging();
					this._ZONA = value;
					this.SendPropertyChanged("ZONA");
					this.OnZONAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NUMERO_PLACAS", DbType="NVarChar(50)")]
		public string NUMERO_PLACAS
		{
			get
			{
				return this._NUMERO_PLACAS;
			}
			set
			{
				if ((this._NUMERO_PLACAS != value))
				{
					this.OnNUMERO_PLACASChanging(value);
					this.SendPropertyChanging();
					this._NUMERO_PLACAS = value;
					this.SendPropertyChanged("NUMERO_PLACAS");
					this.OnNUMERO_PLACASChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CLAVE_SICE", DbType="NVarChar(50)")]
		public string CLAVE_SICE
		{
			get
			{
				return this._CLAVE_SICE;
			}
			set
			{
				if ((this._CLAVE_SICE != value))
				{
					this.OnCLAVE_SICEChanging(value);
					this.SendPropertyChanging();
					this._CLAVE_SICE = value;
					this.SendPropertyChanged("CLAVE_SICE");
					this.OnCLAVE_SICEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CLAVE_PEMEX", DbType="NVarChar(50)")]
		public string CLAVE_PEMEX
		{
			get
			{
				return this._CLAVE_PEMEX;
			}
			set
			{
				if ((this._CLAVE_PEMEX != value))
				{
					this.OnCLAVE_PEMEXChanging(value);
					this.SendPropertyChanging();
					this._CLAVE_PEMEX = value;
					this.SendPropertyChanged("CLAVE_PEMEX");
					this.OnCLAVE_PEMEXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TIPO_ID", DbType="Int")]
		public System.Nullable<int> TIPO_ID
		{
			get
			{
				return this._TIPO_ID;
			}
			set
			{
				if ((this._TIPO_ID != value))
				{
					if (this._TIPO_USUARIO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTIPO_IDChanging(value);
					this.SendPropertyChanging();
					this._TIPO_ID = value;
					this.SendPropertyChanged("TIPO_ID");
					this.OnTIPO_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATOS_FISCALES_ID", DbType="Int NOT NULL")]
		public int DATOS_FISCALES_ID
		{
			get
			{
				return this._DATOS_FISCALES_ID;
			}
			set
			{
				if ((this._DATOS_FISCALES_ID != value))
				{
					if (this._DATO_FISCAL.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDATOS_FISCALES_IDChanging(value);
					this.SendPropertyChanging();
					this._DATOS_FISCALES_ID = value;
					this.SendPropertyChanged("DATOS_FISCALES_ID");
					this.OnDATOS_FISCALES_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="USUARIO_EMPLEADO", Storage="_EMPLEADOs", ThisKey="USUARIO_ID", OtherKey="USUARIO_ID")]
		public EntitySet<EMPLEADO> EMPLEADOs
		{
			get
			{
				return this._EMPLEADOs;
			}
			set
			{
				this._EMPLEADOs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="USUARIO_EMPRESA", Storage="_EMPRESAs", ThisKey="USUARIO_ID", OtherKey="USUARIO_ID")]
		public EntitySet<EMPRESA> EMPRESAs
		{
			get
			{
				return this._EMPRESAs;
			}
			set
			{
				this._EMPRESAs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="USUARIO_EMPRESA_EMPLEADO", Storage="_EMPRESA_EMPLEADOs", ThisKey="USUARIO_ID", OtherKey="EMPLEADO_ID")]
		public EntitySet<EMPRESA_EMPLEADO> EMPRESA_EMPLEADOs
		{
			get
			{
				return this._EMPRESA_EMPLEADOs;
			}
			set
			{
				this._EMPRESA_EMPLEADOs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="USUARIO_FACTURA", Storage="_FACTURAs", ThisKey="USUARIO_ID", OtherKey="USUARIO_ID")]
		public EntitySet<FACTURA> FACTURAs
		{
			get
			{
				return this._FACTURAs;
			}
			set
			{
				this._FACTURAs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="USUARIO_MATRIZ_SUCURSAL", Storage="_MATRIZ_SUCURSALs", ThisKey="USUARIO_ID", OtherKey="SUCURSAL_ID")]
		public EntitySet<MATRIZ_SUCURSAL> MATRIZ_SUCURSALs
		{
			get
			{
				return this._MATRIZ_SUCURSALs;
			}
			set
			{
				this._MATRIZ_SUCURSALs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="USUARIO_PRODUCTO_USUARIO", Storage="_PRODUCTO_USUARIOs", ThisKey="USUARIO_ID", OtherKey="USUARIO_ID")]
		public EntitySet<PRODUCTO_USUARIO> PRODUCTO_USUARIOs
		{
			get
			{
				return this._PRODUCTO_USUARIOs;
			}
			set
			{
				this._PRODUCTO_USUARIOs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="USUARIO_PROVEEDOR", Storage="_PROVEEDORs", ThisKey="USUARIO_ID", OtherKey="USUARIO_ID")]
		public EntitySet<PROVEEDOR> PROVEEDORs
		{
			get
			{
				return this._PROVEEDORs;
			}
			set
			{
				this._PROVEEDORs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DATO_FISCAL_USUARIO", Storage="_DATO_FISCAL", ThisKey="DATOS_FISCALES_ID", OtherKey="DATOS_FISCALES_ID", IsForeignKey=true)]
		public DATO_FISCAL DATO_FISCAL
		{
			get
			{
				return this._DATO_FISCAL.Entity;
			}
			set
			{
				DATO_FISCAL previousValue = this._DATO_FISCAL.Entity;
				if (((previousValue != value) 
							|| (this._DATO_FISCAL.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DATO_FISCAL.Entity = null;
						previousValue.USUARIOs.Remove(this);
					}
					this._DATO_FISCAL.Entity = value;
					if ((value != null))
					{
						value.USUARIOs.Add(this);
						this._DATOS_FISCALES_ID = value.DATOS_FISCALES_ID;
					}
					else
					{
						this._DATOS_FISCALES_ID = default(int);
					}
					this.SendPropertyChanged("DATO_FISCAL");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TIPO_USUARIO_USUARIO", Storage="_TIPO_USUARIO", ThisKey="TIPO_ID", OtherKey="TIPO_ID", IsForeignKey=true)]
		public TIPO_USUARIO TIPO_USUARIO
		{
			get
			{
				return this._TIPO_USUARIO.Entity;
			}
			set
			{
				TIPO_USUARIO previousValue = this._TIPO_USUARIO.Entity;
				if (((previousValue != value) 
							|| (this._TIPO_USUARIO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TIPO_USUARIO.Entity = null;
						previousValue.USUARIOs.Remove(this);
					}
					this._TIPO_USUARIO.Entity = value;
					if ((value != null))
					{
						value.USUARIOs.Add(this);
						this._TIPO_ID = value.TIPO_ID;
					}
					else
					{
						this._TIPO_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("TIPO_USUARIO");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EMPLEADOs(EMPLEADO entity)
		{
			this.SendPropertyChanging();
			entity.USUARIO = this;
		}
		
		private void detach_EMPLEADOs(EMPLEADO entity)
		{
			this.SendPropertyChanging();
			entity.USUARIO = null;
		}
		
		private void attach_EMPRESAs(EMPRESA entity)
		{
			this.SendPropertyChanging();
			entity.USUARIO = this;
		}
		
		private void detach_EMPRESAs(EMPRESA entity)
		{
			this.SendPropertyChanging();
			entity.USUARIO = null;
		}
		
		private void attach_EMPRESA_EMPLEADOs(EMPRESA_EMPLEADO entity)
		{
			this.SendPropertyChanging();
			entity.USUARIO = this;
		}
		
		private void detach_EMPRESA_EMPLEADOs(EMPRESA_EMPLEADO entity)
		{
			this.SendPropertyChanging();
			entity.USUARIO = null;
		}
		
		private void attach_FACTURAs(FACTURA entity)
		{
			this.SendPropertyChanging();
			entity.USUARIO = this;
		}
		
		private void detach_FACTURAs(FACTURA entity)
		{
			this.SendPropertyChanging();
			entity.USUARIO = null;
		}
		
		private void attach_MATRIZ_SUCURSALs(MATRIZ_SUCURSAL entity)
		{
			this.SendPropertyChanging();
			entity.USUARIO = this;
		}
		
		private void detach_MATRIZ_SUCURSALs(MATRIZ_SUCURSAL entity)
		{
			this.SendPropertyChanging();
			entity.USUARIO = null;
		}
		
		private void attach_PRODUCTO_USUARIOs(PRODUCTO_USUARIO entity)
		{
			this.SendPropertyChanging();
			entity.USUARIO = this;
		}
		
		private void detach_PRODUCTO_USUARIOs(PRODUCTO_USUARIO entity)
		{
			this.SendPropertyChanging();
			entity.USUARIO = null;
		}
		
		private void attach_PROVEEDORs(PROVEEDOR entity)
		{
			this.SendPropertyChanging();
			entity.USUARIO = this;
		}
		
		private void detach_PROVEEDORs(PROVEEDOR entity)
		{
			this.SendPropertyChanging();
			entity.USUARIO = null;
		}
	}
}
#pragma warning restore 1591
